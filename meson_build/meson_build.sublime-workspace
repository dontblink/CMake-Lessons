{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"libc_test_",
				"libc_test_flags"
			],
			[
				"test",
				"test_output_dir"
			],
			[
				"openlib",
				"openlibm_subproject"
			],
			[
				"DRDY",
				"DRDY_PIN"
			],
			[
				"DRDY_",
				"DRDY_DIR_PORT"
			],
			[
				"HT_C",
				"HT_CS_DIR_PORT"
			],
			[
				"intrin",
				"intrinsics.h\""
			],
			[
				"mb_re",
				"mb_file_records.h\""
			],
			[
				"proximi",
				"proximity_i2c.h\""
			],
			[
				"temphum",
				"temphumadc.h\""
			],
			[
				"calen",
				"calendar_i2c.h\""
			],
			[
				"msp430",
				"msp430_adc.h\""
			],
			[
				"mock_in",
				"mock_intrinsics.h\""
			],
			[
				"msp",
				"msp430_adc.h\""
			],
			[
				"ads",
				"SPI_ADS1256.h\""
			],
			[
				"temphu",
				"temphumadc.h\""
			],
			[
				"relay",
				"relay_timer.h\""
			],
			[
				"proxi",
				"proximity_i2c.h\""
			],
			[
				"calendar",
				"calendar_i2c.h\""
			],
			[
				"msp43",
				"msp430_adc.h\""
			],
			[
				"proxim",
				"proximity_i2c"
			],
			[
				"UART_DE",
				"uart_de"
			],
			[
				"FRAM_PROX",
				"FRAM_PROXIMITY_LIMIT"
			],
			[
				"calend",
				"calendar_types.h\""
			],
			[
				"HUMIDITY",
				"HUMIDITY_OUT_L"
			],
			[
				"read_i2c_data_mn",
				"read_i2c_data_mnack_end"
			],
			[
				"I2C_Mst",
				"I2C_Mst_NACK"
			],
			[
				"FAULT_TEMP",
				"FAULT_TEMP_PROXIMITY"
			],
			[
				"FAULT_MULT",
				"FAULT_MULTIPLE_ERR_START"
			],
			[
				"FAULT_MULTIPLE",
				"FAULT_MULTIPLE_ERR_END"
			],
			[
				"FAULT_MULTI",
				"FAULT_MULTIPLE_ERR_END"
			],
			[
				"FAULT_MU",
				"FAULT_MULTIPLE_ERR_START"
			],
			[
				"gIR_Pre",
				"gIR_PreTest_27um_mV"
			],
			[
				"gFire",
				"gFireDiagram_Index"
			],
			[
				"get_ir",
				"get_ir_sensor_enabled"
			],
			[
				"START_",
				"START_OFFSET_CALC"
			],
			[
				"std_",
				"std_offset_idx"
			],
			[
				"get_all",
				"get_all_avg_signals"
			],
			[
				"uv_",
				"uv_ir_test_flag"
			],
			[
				"handle_ir",
				"handle_mode1_ir_alarm"
			],
			[
				"handle",
				"handle_mode1_ir_alarm"
			],
			[
				"avg_signal",
				"avg_signal_38um_5hz"
			],
			[
				"avg_signal_43",
				"avg_signal_43um_5hz"
			],
			[
				"avg_signal_43um",
				"avg_signal_43um_5hz"
			],
			[
				"guv",
				"gUVpulsTot"
			],
			[
				"proximit",
				"proximity_timeout_flag"
			],
			[
				"Handle_Proxi",
				"Handle_Proximity_ERR"
			],
			[
				"TEST_ASSERT_BITS",
				"TEST_ASSERT_BITS_HIGH"
			],
			[
				"LEDObserv",
				"LEDObserverState"
			],
			[
				"RLY_AUX",
				"RLY_AUX_ON"
			],
			[
				"StopRelayOff",
				"StopFireRelayOffTimer"
			],
			[
				"timeobser",
				"time_observer"
			],
			[
				"gUV_IR_",
				"gUV_IR_Test_FLAG"
			],
			[
				"gAvg_",
				"gAvg_mV43um25Hz"
			],
			[
				"gAvg_mV27",
				"gAvg_mV27um25Hz"
			],
			[
				"FIRE_",
				"FRAM_FIRE_RATIO"
			],
			[
				"gIR",
				"gIR_ALARM"
			],
			[
				"gAvg_mV38",
				"gAvg_mV38um5Hz"
			],
			[
				"gA",
				"gAvg_mV43um5Hz"
			],
			[
				"gAvg_mV38um",
				"gAvg_mV38um5Hz"
			],
			[
				"TEST_ASSERT",
				"TEST_ASSERT_EQUAL_FLOAT"
			],
			[
				"gRatio_43u",
				"gRatio_43um38um_5Hz"
			],
			[
				"gAvg_mV43um",
				"gAvg_mV43um25Hz"
			],
			[
				"gRatio",
				"gRatio_43um38um_5Hz"
			],
			[
				"TEST_ASSERT_",
				"TEST_ASSERT_EQUAL_FLOAT"
			],
			[
				"gAvg_mV",
				"gAvg_mV38um25Hz"
			],
			[
				"gAvg",
				"gAvg_mV43um25Hz"
			],
			[
				"gAvg_mV27um",
				"gAvg_mV27um25Hz"
			],
			[
				"gavg",
				"gAvg_mV43um25Hz"
			],
			[
				"guvpu",
				"gUVpulsTot"
			],
			[
				"gAvg_mv38",
				"gAvg_mV38um25Hz"
			],
			[
				"gAvg_mv27",
				"gAvg_mV27um25Hz"
			],
			[
				"TEST_",
				"TEST_ASSERT_EQUAL_FLOAT"
			],
			[
				"gAvg_mV3",
				"gAvg_mV38um25Hz"
			],
			[
				"TEST_AS",
				"TEST_ASSERT_EQUAL_FLOAT"
			],
			[
				"ratiouv43",
				"ratiouv43um5hz_min"
			],
			[
				"gFLT_",
				"gFLT_UnLatch"
			],
			[
				"inc",
				"inc_uv_ir_fail"
			],
			[
				"in",
				"intrinsics"
			],
			[
				"gStart",
				"gStartupFaultTest"
			],
			[
				"SPI_ADS",
				"SPI_ADS1256.h"
			],
			[
				"msp4",
				"msp430fr6989.h"
			],
			[
				"gUV_Sen",
				"gUV_Sen_index2"
			],
			[
				"PIE1bi",
				"PIE1bits.RCIE"
			],
			[
				"eccp2",
				"eccp2.h"
			],
			[
				"last",
				"glbMode.lastHazardSet"
			],
			[
				"GetPul",
				"GetPulseTime_CH2\t(input.h)"
			],
			[
				"GetPulse",
				"GetPulseTime_CH1\t(input.h)"
			],
			[
				"tm",
				"tmr4.h\t(mode.c)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "libc-skeleton/src/meson.build",
			"redo_stack":
			[
				[
					1012,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAALcYAAAAAAAAtxgAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					1007,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAJ4YAAAAAAAAnhgAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAnxgAAAAAAACfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1002,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAFQYAAAAAAAAVBgAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAVRgAAAAAAABVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAADsYAAAAAAAAOxgAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAPBgAAAAAAAA8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					974,
					1,
					"insert",
					{
						"characters": "link_"
					},
					"BQAAAI8YAAAAAAAAjxgAAAAAAAABAAAAX44YAAAAAAAAjhgAAAAAAAABAAAAa40YAAAAAAAAjRgAAAAAAAABAAAAbowYAAAAAAAAjBgAAAAAAAABAAAAaYsYAAAAAAAAixgAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAkBgAAAAAAACQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": "link_"
					},
					"BQAAAC4YAAAAAAAALhgAAAAAAAABAAAAXy0YAAAAAAAALRgAAAAAAAABAAAAaywYAAAAAAAALBgAAAAAAAABAAAAbisYAAAAAAAAKxgAAAAAAAABAAAAaSoYAAAAAAAAKhgAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAALxgAAAAAAAAvGAAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 7601,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BQAAADAFAAAAAAAAMgUAAAAAAAAAAAAAEQUAAAAAAAATBQAAAAAAAAAAAADrBAAAAAAAAO0EAAAAAAAAAAAAAN0EAAAAAAAA3wQAAAAAAAAAAAAAugQAAAAAAAC8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQUAAAAAAAC6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKsPAAAAAAAArA8AAAAAAAAAAAAArA8AAAAAAACtDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqw8AAAAAAACrDwAAAAAAAAAAAAAAoGJA"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "gdtoa"
					},
					"BQAAAK0PAAAAAAAArg8AAAAAAAAAAAAArg8AAAAAAACvDwAAAAAAAAAAAACvDwAAAAAAALAPAAAAAAAAAAAAALAPAAAAAAAAsQ8AAAAAAAAAAAAAsQ8AAAAAAACyDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQ8AAAAAAACtDwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert_completion",
					{
						"completion": "gdtoa_files",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gdtoa_files"
					},
					"AgAAAK0PAAAAAAAArQ8AAAAAAAAFAAAAZ2R0b2GtDwAAAAAAALgPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg8AAAAAAACyDwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALgPAAAAAAAAuQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuA8AAAAAAAC4DwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAJURAAAAAAAAlhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlREAAAAAAACVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALcRAAAAAAAAuBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxEAAAAAAAC3EQAAAAAAAP///////+9/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgRAAAAAAAAuREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBEAAAAAAAC4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "gdtoa_includes"
					},
					"DgAAALkRAAAAAAAAuhEAAAAAAAAAAAAAuhEAAAAAAAC7EQAAAAAAAAAAAAC7EQAAAAAAALwRAAAAAAAAAAAAALwRAAAAAAAAvREAAAAAAAAAAAAAvREAAAAAAAC+EQAAAAAAAAAAAAC+EQAAAAAAAL8RAAAAAAAAAAAAAL8RAAAAAAAAwBEAAAAAAAAAAAAAwBEAAAAAAADBEQAAAAAAAAAAAADBEQAAAAAAAMIRAAAAAAAAAAAAAMIRAAAAAAAAwxEAAAAAAAAAAAAAwxEAAAAAAADEEQAAAAAAAAAAAADEEQAAAAAAAMURAAAAAAAAAAAAAMURAAAAAAAAxhEAAAAAAAAAAAAAxhEAAAAAAADHEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuREAAAAAAAC5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAMcRAAAAAAAAyBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxEAAAAAAADHEQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "gdtoa_compiler_"
					},
					"EAAAACYSAAAAAAAAJxIAAAAAAAAAAAAAJxIAAAAAAAAnEgAAAAAAAAIAAABbXScSAAAAAAAAKBIAAAAAAAAAAAAAKBIAAAAAAAApEgAAAAAAAAAAAAApEgAAAAAAACoSAAAAAAAAAAAAACoSAAAAAAAAKxIAAAAAAAAAAAAAKxIAAAAAAAAsEgAAAAAAAAAAAAAsEgAAAAAAAC0SAAAAAAAAAAAAAC0SAAAAAAAALhIAAAAAAAAAAAAALhIAAAAAAAAvEgAAAAAAAAAAAAAvEgAAAAAAADASAAAAAAAAAAAAADASAAAAAAAAMRIAAAAAAAAAAAAAMRIAAAAAAAAyEgAAAAAAAAAAAAAyEgAAAAAAADMSAAAAAAAAAAAAADMSAAAAAAAANBIAAAAAAAAAAAAANBIAAAAAAAA1EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBIAAAAAAAAmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "flags"
					},
					"BQAAADUSAAAAAAAANhIAAAAAAAAAAAAANhIAAAAAAAA3EgAAAAAAAAAAAAA3EgAAAAAAADgSAAAAAAAAAAAAADgSAAAAAAAAORIAAAAAAAAAAAAAORIAAAAAAAA6EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRIAAAAAAAA1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "pr"
					},
					"AwAAAFoXAAAAAAAAWxcAAAAAAAAAAAAAWxcAAAAAAABbFwAAAAAAABQAAABsaWJwcmludGZfbmF0aXZlX2RlcFsXAAAAAAAAXBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhcAAAAAAABuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "intfiles"
					},
					"CAAAAFwXAAAAAAAAXRcAAAAAAAAAAAAAXRcAAAAAAABeFwAAAAAAAAAAAABeFwAAAAAAAF8XAAAAAAAAAAAAAF8XAAAAAAAAYBcAAAAAAAAAAAAAYBcAAAAAAABhFwAAAAAAAAAAAABhFwAAAAAAAGIXAAAAAAAAAAAAAGIXAAAAAAAAYxcAAAAAAAAAAAAAYxcAAAAAAABkFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBcAAAAAAABcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					4,
					"left_delete",
					null,
					"BAAAAGMXAAAAAAAAYxcAAAAAAAABAAAAc2IXAAAAAAAAYhcAAAAAAAABAAAAZWEXAAAAAAAAYRcAAAAAAAABAAAAbGAXAAAAAAAAYBcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAZBcAAAAAAABkFwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "_files_dep"
					},
					"CgAAAGAXAAAAAAAAYRcAAAAAAAAAAAAAYRcAAAAAAABiFwAAAAAAAAAAAABiFwAAAAAAAGMXAAAAAAAAAAAAAGMXAAAAAAAAZBcAAAAAAAAAAAAAZBcAAAAAAABlFwAAAAAAAAAAAABlFwAAAAAAAGYXAAAAAAAAAAAAAGYXAAAAAAAAZxcAAAAAAAAAAAAAZxcAAAAAAABoFwAAAAAAAAAAAABoFwAAAAAAAGkXAAAAAAAAAAAAAGkXAAAAAAAAahcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBcAAAAAAABgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "printf_files_dep"
					},
					"EQAAAIYZAAAAAAAAhxkAAAAAAAAAAAAAhxkAAAAAAACHGQAAAAAAAA0AAABsaWJwcmludGZfZGVwhxkAAAAAAACIGQAAAAAAAAAAAACIGQAAAAAAAIkZAAAAAAAAAAAAAIkZAAAAAAAAihkAAAAAAAAAAAAAihkAAAAAAACLGQAAAAAAAAAAAACLGQAAAAAAAIwZAAAAAAAAAAAAAIwZAAAAAAAAjRkAAAAAAAAAAAAAjRkAAAAAAACOGQAAAAAAAAAAAACOGQAAAAAAAI8ZAAAAAAAAAAAAAI8ZAAAAAAAAkBkAAAAAAAAAAAAAkBkAAAAAAACRGQAAAAAAAAAAAACRGQAAAAAAAJIZAAAAAAAAAAAAAJIZAAAAAAAAkxkAAAAAAAAAAAAAkxkAAAAAAACUGQAAAAAAAAAAAACUGQAAAAAAAJUZAAAAAAAAAAAAAJUZAAAAAAAAlhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxkAAAAAAACGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAN0RAAAAAAAA3hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3REAAAAAAADdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"left_delete",
					null,
					"AQAAAN0RAAAAAAAA3REAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA3hEAAAAAAADeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAN0RAAAAAAAA3hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3REAAAAAAADdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"left_delete",
					null,
					"AQAAAN0RAAAAAAAA3REAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA3hEAAAAAAADeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAN0RAAAAAAAA3hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3REAAAAAAADdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"left_delete",
					null,
					"AQAAAN0RAAAAAAAA3REAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA3hEAAAAAAADeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAN0RAAAAAAAA3hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3REAAAAAAADdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP4RAAAAAAAA/xEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hEAAAAAAAD+EQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " gdtoa_includ"
					},
					"DQAAAP8RAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAABEgAAAAAAAAAAAAABEgAAAAAAAAISAAAAAAAAAAAAAAISAAAAAAAAAxIAAAAAAAAAAAAAAxIAAAAAAAAEEgAAAAAAAAAAAAAEEgAAAAAAAAUSAAAAAAAAAAAAAAUSAAAAAAAABhIAAAAAAAAAAAAABhIAAAAAAAAHEgAAAAAAAAAAAAAHEgAAAAAAAAgSAAAAAAAAAAAAAAgSAAAAAAAACRIAAAAAAAAAAAAACRIAAAAAAAAKEgAAAAAAAAAAAAAKEgAAAAAAAAsSAAAAAAAAAAAAAAsSAAAAAAAADBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xEAAAAAAAD/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "es]"
					},
					"AwAAAAwSAAAAAAAADRIAAAAAAAAAAAAADRIAAAAAAAAOEgAAAAAAAAAAAAAOEgAAAAAAAA8SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBIAAAAAAAAMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAAA4SAAAAAAAADhIAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAADxIAAAAAAAAPEgAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"cut",
					null,
					"AQAAAAASAAAAAAAAABIAAAAAAAAPAAAAZ2R0b2FfaW5jbHVkZXMs",
					"AQAAAAAAAAABAAAAABIAAAAAAAAPEgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABESAAAAAAAAEhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERIAAAAAAAAREgAAAAAAAP///////+9/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABISAAAAAAAAExIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEhIAAAAAAAASEgAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"paste",
					null,
					"AQAAABMSAAAAAAAAIhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExIAAAAAAAATEgAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAACISAAAAAAAAIxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhIAAAAAAAAiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"left_delete",
					null,
					"AQAAACESAAAAAAAAIRIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAIhIAAAAAAAAiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "sys_"
					},
					"BAAAABkSAAAAAAAAGhIAAAAAAAAAAAAAGhIAAAAAAAAbEgAAAAAAAAAAAAAbEgAAAAAAABwSAAAAAAAAAAAAABwSAAAAAAAAHRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRIAAAAAAAAZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "#Libc"
					},
					"BQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUAAAAAAAAABgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "files"
					},
					"BQAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"cut",
					null,
					"AQAAAOMDAAAAAAAA4wMAAAAAAADjAAAAZ2R0b2FfaW5jbHVkZXMgPSBpbmNsdWRlX2RpcmVjdG9yaWVzKCdnZHRvYS9pbmNsdWRlJykKZ2R0b2Ffc3lzX2luY2x1ZGVzID0gaW5jbHVkZV9kaXJlY3RvcmllcygnZ2R0b2EvaW5jbHVkZScsIGlzX3N5c3RlbTogdHJ1ZSkKCmdkdG9hX2NvbXBpbGVyX2ZsYWdzID0gWwoJJy1ETk9fRVJSTk8nLAoJJy1ESUZOQU5fQ0hFQ0snLAoJJy1ER0RUT0FfTk9fQVNTRVJUJywKCSctRE5PX0ZFTlZfSCcKXQo",
					"AQAAAAAAAAABAAAAxgQAAAAAAADjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"left_delete",
					null,
					"AQAAAOIDAAAAAAAA4gMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA4wMAAAAAAADjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFQQAAAAAAAAVRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"paste",
					null,
					"AQAAAFUQAAAAAAAAOBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRAAAAAAAABVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFQQAAAAAAAAVRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAAAAA"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAFUQAAAAAAAAVhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRAAAAAAAABVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "Libc"
					},
					"BAAAAFYQAAAAAAAAVxAAAAAAAAAAAAAAVxAAAAAAAABYEAAAAAAAAAAAAABYEAAAAAAAAFkQAAAAAAAAAAAAAFkQAAAAAAAAWhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhAAAAAAAABWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": " Includes"
					},
					"CQAAAFoQAAAAAAAAWxAAAAAAAAAAAAAAWxAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAF0QAAAAAAAAAAAAAF0QAAAAAAAAXhAAAAAAAAAAAAAAXhAAAAAAAABfEAAAAAAAAAAAAABfEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAYRAAAAAAAAAAAAAAYRAAAAAAAABiEAAAAAAAAAAAAABiEAAAAAAAAGMQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhAAAAAAAABaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": " ##################################"
					},
					"IwAAAGMQAAAAAAAAZBAAAAAAAAAAAAAAZBAAAAAAAABlEAAAAAAAAAAAAABlEAAAAAAAAGYQAAAAAAAAAAAAAGYQAAAAAAAAZxAAAAAAAAAAAAAAZxAAAAAAAABoEAAAAAAAAAAAAABoEAAAAAAAAGkQAAAAAAAAAAAAAGkQAAAAAAAAahAAAAAAAAAAAAAAahAAAAAAAABrEAAAAAAAAAAAAABrEAAAAAAAAGwQAAAAAAAAAAAAAGwQAAAAAAAAbRAAAAAAAAAAAAAAbRAAAAAAAABuEAAAAAAAAAAAAABuEAAAAAAAAG8QAAAAAAAAAAAAAG8QAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAABxEAAAAAAAAAAAAABxEAAAAAAAAHIQAAAAAAAAAAAAAHIQAAAAAAAAcxAAAAAAAAAAAAAAcxAAAAAAAAB0EAAAAAAAAAAAAAB0EAAAAAAAAHUQAAAAAAAAAAAAAHUQAAAAAAAAdhAAAAAAAAAAAAAAdhAAAAAAAAB3EAAAAAAAAAAAAAB3EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAeRAAAAAAAAAAAAAAeRAAAAAAAAB6EAAAAAAAAAAAAAB6EAAAAAAAAHsQAAAAAAAAAAAAAHsQAAAAAAAAfBAAAAAAAAAAAAAAfBAAAAAAAAB9EAAAAAAAAAAAAAB9EAAAAAAAAH4QAAAAAAAAAAAAAH4QAAAAAAAAfxAAAAAAAAAAAAAAfxAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAIEQAAAAAAAAAAAAAIEQAAAAAAAAghAAAAAAAAAAAAAAghAAAAAAAACDEAAAAAAAAAAAAACDEAAAAAAAAIQQAAAAAAAAAAAAAIQQAAAAAAAAhRAAAAAAAAAAAAAAhRAAAAAAAACGEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxAAAAAAAABjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"cut",
					null,
					"AQAAAAkRAAAAAAAACREAAAAAAABhAAAAZ2R0b2FfY29tcGlsZXJfZmxhZ3MgPSBbCgknLUROT19FUlJOTycsCgknLURJRk5BTl9DSEVDSycsCgknLURHRFRPQV9OT19BU1NFUlQnLAoJJy1ETk9fRkVOVl9IJwpdCg",
					"AQAAAAAAAAABAAAACREAAAAAAABqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"left_delete",
					null,
					"AQAAAAgRAAAAAAAACBEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAACREAAAAAAAAJEQAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAQSAAAAAAAABRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBIAAAAAAAAEEgAAAAAAAAAAAAAAAAAA"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAUSAAAAAAAABhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRIAAAAAAAAFEgAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "Libc"
					},
					"BAAAAAYSAAAAAAAABxIAAAAAAAAAAAAABxIAAAAAAAAIEgAAAAAAAAAAAAAIEgAAAAAAAAkSAAAAAAAAAAAAAAkSAAAAAAAAChIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhIAAAAAAAAGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": " compiler"
					},
					"CQAAAAoSAAAAAAAACxIAAAAAAAAAAAAACxIAAAAAAAAMEgAAAAAAAAAAAAAMEgAAAAAAAA0SAAAAAAAAAAAAAA0SAAAAAAAADhIAAAAAAAAAAAAADhIAAAAAAAAPEgAAAAAAAAAAAAAPEgAAAAAAABASAAAAAAAAAAAAABASAAAAAAAAERIAAAAAAAAAAAAAERIAAAAAAAASEgAAAAAAAAAAAAASEgAAAAAAABMSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChIAAAAAAAAKEgAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": " flags"
					},
					"BgAAABMSAAAAAAAAFBIAAAAAAAAAAAAAFBIAAAAAAAAVEgAAAAAAAAAAAAAVEgAAAAAAABYSAAAAAAAAAAAAABYSAAAAAAAAFxIAAAAAAAAAAAAAFxIAAAAAAAAYEgAAAAAAAAAAAAAYEgAAAAAAABkSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExIAAAAAAAATEgAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert",
					{
						"characters": " ###############################"
					},
					"IAAAABkSAAAAAAAAGhIAAAAAAAAAAAAAGhIAAAAAAAAbEgAAAAAAAAAAAAAbEgAAAAAAABwSAAAAAAAAAAAAABwSAAAAAAAAHRIAAAAAAAAAAAAAHRIAAAAAAAAeEgAAAAAAAAAAAAAeEgAAAAAAAB8SAAAAAAAAAAAAAB8SAAAAAAAAIBIAAAAAAAAAAAAAIBIAAAAAAAAhEgAAAAAAAAAAAAAhEgAAAAAAACISAAAAAAAAAAAAACISAAAAAAAAIxIAAAAAAAAAAAAAIxIAAAAAAAAkEgAAAAAAAAAAAAAkEgAAAAAAACUSAAAAAAAAAAAAACUSAAAAAAAAJhIAAAAAAAAAAAAAJhIAAAAAAAAnEgAAAAAAAAAAAAAnEgAAAAAAACgSAAAAAAAAAAAAACgSAAAAAAAAKRIAAAAAAAAAAAAAKRIAAAAAAAAqEgAAAAAAAAAAAAAqEgAAAAAAACsSAAAAAAAAAAAAACsSAAAAAAAALBIAAAAAAAAAAAAALBIAAAAAAAAtEgAAAAAAAAAAAAAtEgAAAAAAAC4SAAAAAAAAAAAAAC4SAAAAAAAALxIAAAAAAAAAAAAALxIAAAAAAAAwEgAAAAAAAAAAAAAwEgAAAAAAADESAAAAAAAAAAAAADESAAAAAAAAMhIAAAAAAAAAAAAAMhIAAAAAAAAzEgAAAAAAAAAAAAAzEgAAAAAAADQSAAAAAAAAAAAAADQSAAAAAAAANRIAAAAAAAAAAAAANRIAAAAAAAA2EgAAAAAAAAAAAAA2EgAAAAAAADcSAAAAAAAAAAAAADcSAAAAAAAAOBIAAAAAAAAAAAAAOBIAAAAAAAA5EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRIAAAAAAAAZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAADgSAAAAAAAAOBIAAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAAORIAAAAAAAA5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"doxy_enter",
					null,
					"AQAAADgSAAAAAAAAORIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBIAAAAAAAA4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"paste",
					null,
					"AQAAADkSAAAAAAAAmhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORIAAAAAAAA5EgAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADkSAAAAAAAAOhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORIAAAAAAAA5EgAAAAAAAAAAAAAAAAAA"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAAAAA"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAOwWAAAAAAAA7RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "Libc"
					},
					"BAAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAADvFgAAAAAAAPAWAAAAAAAAAAAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": " static"
					},
					"BwAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA8hYAAAAAAADzFgAAAAAAAAAAAADzFgAAAAAAAPQWAAAAAAAAAAAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA9RYAAAAAAAD2FgAAAAAAAAAAAAD2FgAAAAAAAPcWAAAAAAAAAAAAAPcWAAAAAAAA+BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RYAAAAAAADxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": " libary"
					},
					"BwAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA+RYAAAAAAAD6FgAAAAAAAAAAAAD6FgAAAAAAAPsWAAAAAAAAAAAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAD9FgAAAAAAAP4WAAAAAAAAAAAAAP4WAAAAAAAA/xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"left_delete",
					null,
					"AQAAAP4WAAAAAAAA/hYAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAA/xYAAAAAAAD/FgAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": "ies"
					},
					"AwAAAP4WAAAAAAAA/xYAAAAAAAAAAAAA/xYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAEXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hYAAAAAAAD+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": " ############################"
					},
					"HQAAAAEXAAAAAAAAAhcAAAAAAAAAAAAAAhcAAAAAAAADFwAAAAAAAAAAAAADFwAAAAAAAAQXAAAAAAAAAAAAAAQXAAAAAAAABRcAAAAAAAAAAAAABRcAAAAAAAAGFwAAAAAAAAAAAAAGFwAAAAAAAAcXAAAAAAAAAAAAAAcXAAAAAAAACBcAAAAAAAAAAAAACBcAAAAAAAAJFwAAAAAAAAAAAAAJFwAAAAAAAAoXAAAAAAAAAAAAAAoXAAAAAAAACxcAAAAAAAAAAAAACxcAAAAAAAAMFwAAAAAAAAAAAAAMFwAAAAAAAA0XAAAAAAAAAAAAAA0XAAAAAAAADhcAAAAAAAAAAAAADhcAAAAAAAAPFwAAAAAAAAAAAAAPFwAAAAAAABAXAAAAAAAAAAAAABAXAAAAAAAAERcAAAAAAAAAAAAAERcAAAAAAAASFwAAAAAAAAAAAAASFwAAAAAAABMXAAAAAAAAAAAAABMXAAAAAAAAFBcAAAAAAAAAAAAAFBcAAAAAAAAVFwAAAAAAAAAAAAAVFwAAAAAAABYXAAAAAAAAAAAAABYXAAAAAAAAFxcAAAAAAAAAAAAAFxcAAAAAAAAYFwAAAAAAAAAAAAAYFwAAAAAAABkXAAAAAAAAAAAAABkXAAAAAAAAGhcAAAAAAAAAAAAAGhcAAAAAAAAbFwAAAAAAAAAAAAAbFwAAAAAAABwXAAAAAAAAAAAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAeFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARcAAAAAAAABFwAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHQbAAAAAAAAdRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBsAAAAAAAB0GwAAAAAAAAAAAAAAcHtA"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAHUbAAAAAAAAdhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRsAAAAAAAB1GwAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "libc"
					},
					"BAAAAHYbAAAAAAAAdxsAAAAAAAAAAAAAdxsAAAAAAAB4GwAAAAAAAAAAAAB4GwAAAAAAAHkbAAAAAAAAAAAAAHkbAAAAAAAAehsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhsAAAAAAAB2GwAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": " dep"
					},
					"BAAAAHobAAAAAAAAexsAAAAAAAAAAAAAexsAAAAAAAB8GwAAAAAAAAAAAAB8GwAAAAAAAH0bAAAAAAAAAAAAAH0bAAAAAAAAfhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehsAAAAAAAB6GwAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "endencies"
					},
					"CQAAAH4bAAAAAAAAfxsAAAAAAAAAAAAAfxsAAAAAAACAGwAAAAAAAAAAAACAGwAAAAAAAIEbAAAAAAAAAAAAAIEbAAAAAAAAghsAAAAAAAAAAAAAghsAAAAAAACDGwAAAAAAAAAAAACDGwAAAAAAAIQbAAAAAAAAAAAAAIQbAAAAAAAAhRsAAAAAAAAAAAAAhRsAAAAAAACGGwAAAAAAAAAAAACGGwAAAAAAAIcbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhsAAAAAAAB+GwAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": " ################################"
					},
					"IQAAAIcbAAAAAAAAiBsAAAAAAAAAAAAAiBsAAAAAAACJGwAAAAAAAAAAAACJGwAAAAAAAIobAAAAAAAAAAAAAIobAAAAAAAAixsAAAAAAAAAAAAAixsAAAAAAACMGwAAAAAAAAAAAACMGwAAAAAAAI0bAAAAAAAAAAAAAI0bAAAAAAAAjhsAAAAAAAAAAAAAjhsAAAAAAACPGwAAAAAAAAAAAACPGwAAAAAAAJAbAAAAAAAAAAAAAJAbAAAAAAAAkRsAAAAAAAAAAAAAkRsAAAAAAACSGwAAAAAAAAAAAACSGwAAAAAAAJMbAAAAAAAAAAAAAJMbAAAAAAAAlBsAAAAAAAAAAAAAlBsAAAAAAACVGwAAAAAAAAAAAACVGwAAAAAAAJYbAAAAAAAAAAAAAJYbAAAAAAAAlxsAAAAAAAAAAAAAlxsAAAAAAACYGwAAAAAAAAAAAACYGwAAAAAAAJkbAAAAAAAAAAAAAJkbAAAAAAAAmhsAAAAAAAAAAAAAmhsAAAAAAACbGwAAAAAAAAAAAACbGwAAAAAAAJwbAAAAAAAAAAAAAJwbAAAAAAAAnRsAAAAAAAAAAAAAnRsAAAAAAACeGwAAAAAAAAAAAACeGwAAAAAAAJ8bAAAAAAAAAAAAAJ8bAAAAAAAAoBsAAAAAAAAAAAAAoBsAAAAAAAChGwAAAAAAAAAAAAChGwAAAAAAAKIbAAAAAAAAAAAAAKIbAAAAAAAAoxsAAAAAAAAAAAAAoxsAAAAAAACkGwAAAAAAAAAAAACkGwAAAAAAAKUbAAAAAAAAAAAAAKUbAAAAAAAAphsAAAAAAAAAAAAAphsAAAAAAACnGwAAAAAAAAAAAACnGwAAAAAAAKgbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxsAAAAAAACHGwAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"cut",
					null,
					"AQAAAEsYAAAAAAAASxgAAAAAAAALAQAAbGliY19uYXRpdmVfZGVwID0gZGVjbGFyZV9kZXBlbmRlbmN5KAoJaW5jbHVkZV9kaXJlY3RvcmllczogW3ByaW50Zl9pbmNsdWRlcywgb3BlbmxpYm1faW5jbHVkZXMsIGxpYmNfc3lzX2luY2x1ZGVzLCBnZHRvYV9zeXNfaW5jbHVkZXMsIGJ1aWxkX21hY2hpbmVfYXJjaF9zcGVjaWZpY19zeXNfaW5jbHVkZXNdLAoJY29tcGlsZV9hcmdzOiBsaWJjX2NvbXBpbGVfZmxhZ3MgK2xpYmNfbmF0aXZlX2NvbXBpbGVfZmxhZ3MsCglsaW5rX3dpdGg6IGxpYmNfbmF0aXZlLAop",
					"AQAAAAAAAAABAAAAVhkAAAAAAABLGAAAAAAAAAAAAAAAAAAA"
				],
				[
					424,
					1,
					"left_delete",
					null,
					"AQAAAEoYAAAAAAAAShgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAASxgAAAAAAABLGAAAAAAAAAAAAAAAAAAA"
				],
				[
					426,
					1,
					"left_delete",
					null,
					"AQAAAEkYAAAAAAAASRgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAShgAAAAAAABKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGoZAAAAAAAAaxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahkAAAAAAABqGQAAAAAAAAAAAAAAACJA"
				],
				[
					431,
					1,
					"paste",
					null,
					"AQAAAGsZAAAAAAAAdhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxkAAAAAAABrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHYaAAAAAAAAdxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhoAAAAAAAB2GgAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					3,
					"swap_line_down",
					null,
					"BgAAAHUbAAAAAAAAfh0AAAAAAAAAAAAAaxkAAAAAAABrGQAAAAAAAAkCAABsaWJjX25hdGl2ZV9kZXAgPSBkZWNsYXJlX2RlcGVuZGVuY3koCglpbmNsdWRlX2RpcmVjdG9yaWVzOiBbcHJpbnRmX2luY2x1ZGVzLCBvcGVubGlibV9pbmNsdWRlcywgbGliY19zeXNfaW5jbHVkZXMsIGdkdG9hX3N5c19pbmNsdWRlcywgYnVpbGRfbWFjaGluZV9hcmNoX3NwZWNpZmljX3N5c19pbmNsdWRlc10sCgljb21waWxlX2FyZ3M6IGxpYmNfY29tcGlsZV9mbGFncyArbGliY19uYXRpdmVfY29tcGlsZV9mbGFncywKCWxpbmtfd2l0aDogbGliY19uYXRpdmUsCikKCmxpYmNfZGVwID0gZGVjbGFyZV9kZXBlbmRlbmN5KAoJaW5jbHVkZV9kaXJlY3RvcmllczogW3ByaW50Zl9pbmNsdWRlcywgb3BlbmxpYm1faW5jbHVkZXMsIGxpYmNfc3lzX2luY2x1ZGVzLCBnZHRvYV9zeXNfaW5jbHVkZXMsIGhvc3RfbWFjaGluZV9hcmNoX3NwZWNpZmljX3N5c19pbmNsdWRlc10sCgljb21waWxlX2FyZ3M6IGxpYmNfY29tcGlsZV9mbGFncyArIGxpYmNfaG9zdF9jb21waWxlX2ZsYWdzLAoJbGlua193aXRoOiBsaWJjLAopCqgbAAAAAAAAsR0AAAAAAAAAAAAAsB0AAAAAAACwHQAAAAAAAAEAAAAKqBsAAAAAAACpGwAAAAAAAAAAAABsGQAAAAAAAGwZAAAAAAAACQIAAGxpYmNfbmF0aXZlX2RlcCA9IGRlY2xhcmVfZGVwZW5kZW5jeSgKCWluY2x1ZGVfZGlyZWN0b3JpZXM6IFtwcmludGZfaW5jbHVkZXMsIG9wZW5saWJtX2luY2x1ZGVzLCBsaWJjX3N5c19pbmNsdWRlcywgZ2R0b2Ffc3lzX2luY2x1ZGVzLCBidWlsZF9tYWNoaW5lX2FyY2hfc3BlY2lmaWNfc3lzX2luY2x1ZGVzXSwKCWNvbXBpbGVfYXJnczogbGliY19jb21waWxlX2ZsYWdzICtsaWJjX25hdGl2ZV9jb21waWxlX2ZsYWdzLAoJbGlua193aXRoOiBsaWJjX25hdGl2ZSwKKQoKbGliY19kZXAgPSBkZWNsYXJlX2RlcGVuZGVuY3koCglpbmNsdWRlX2RpcmVjdG9yaWVzOiBbcHJpbnRmX2luY2x1ZGVzLCBvcGVubGlibV9pbmNsdWRlcywgbGliY19zeXNfaW5jbHVkZXMsIGdkdG9hX3N5c19pbmNsdWRlcywgaG9zdF9tYWNoaW5lX2FyY2hfc3BlY2lmaWNfc3lzX2luY2x1ZGVzXSwKCWNvbXBpbGVfYXJnczogbGliY19jb21waWxlX2ZsYWdzICsgbGliY19ob3N0X2NvbXBpbGVfZmxhZ3MsCglsaW5rX3dpdGg6IGxpYmMsCikK",
					"AQAAAAAAAAABAAAAaxkAAAAAAABzGwAAAAAAAP///////+9/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAACJA"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAAAAA"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAOwWAAAAAAAA7RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAADvFgAAAAAAAPAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					3,
					"left_delete",
					null,
					"AwAAAO8WAAAAAAAA7xYAAAAAAAABAAAAYu4WAAAAAAAA7hYAAAAAAAABAAAAae0WAAAAAAAA7RYAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA8BYAAAAAAADwFgAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": "Libc"
					},
					"BAAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAADvFgAAAAAAAPAWAAAAAAAAAAAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": " Linker"
					},
					"BwAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA8hYAAAAAAADzFgAAAAAAAAAAAADzFgAAAAAAAPQWAAAAAAAAAAAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA9RYAAAAAAAD2FgAAAAAAAAAAAAD2FgAAAAAAAPcWAAAAAAAAAAAAAPcWAAAAAAAA+BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RYAAAAAAADxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": " Flags"
					},
					"BgAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA+RYAAAAAAAD6FgAAAAAAAAAAAAD6FgAAAAAAAPsWAAAAAAAAAAAAAPsWAAAAAAAA/BYAAAAAAAAAAAAA/BYAAAAAAAD9FgAAAAAAAAAAAAD9FgAAAAAAAP4WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": " ###############################"
					},
					"IAAAAP4WAAAAAAAA/xYAAAAAAAAAAAAA/xYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAEXAAAAAAAAAAAAAAEXAAAAAAAAAhcAAAAAAAAAAAAAAhcAAAAAAAADFwAAAAAAAAAAAAADFwAAAAAAAAQXAAAAAAAAAAAAAAQXAAAAAAAABRcAAAAAAAAAAAAABRcAAAAAAAAGFwAAAAAAAAAAAAAGFwAAAAAAAAcXAAAAAAAAAAAAAAcXAAAAAAAACBcAAAAAAAAAAAAACBcAAAAAAAAJFwAAAAAAAAAAAAAJFwAAAAAAAAoXAAAAAAAAAAAAAAoXAAAAAAAACxcAAAAAAAAAAAAACxcAAAAAAAAMFwAAAAAAAAAAAAAMFwAAAAAAAA0XAAAAAAAAAAAAAA0XAAAAAAAADhcAAAAAAAAAAAAADhcAAAAAAAAPFwAAAAAAAAAAAAAPFwAAAAAAABAXAAAAAAAAAAAAABAXAAAAAAAAERcAAAAAAAAAAAAAERcAAAAAAAASFwAAAAAAAAAAAAASFwAAAAAAABMXAAAAAAAAAAAAABMXAAAAAAAAFBcAAAAAAAAAAAAAFBcAAAAAAAAVFwAAAAAAAAAAAAAVFwAAAAAAABYXAAAAAAAAAAAAABYXAAAAAAAAFxcAAAAAAAAAAAAAFxcAAAAAAAAYFwAAAAAAAAAAAAAYFwAAAAAAABkXAAAAAAAAAAAAABkXAAAAAAAAGhcAAAAAAAAAAAAAGhcAAAAAAAAbFwAAAAAAAAAAAAAbFwAAAAAAABwXAAAAAAAAAAAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAeFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hYAAAAAAAD+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"doxy_enter",
					null,
					"AQAAAB4XAAAAAAAAHxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhcAAAAAAAAeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "libc_native_lin"
					},
					"DwAAAB8XAAAAAAAAIBcAAAAAAAAAAAAAIBcAAAAAAAAhFwAAAAAAAAAAAAAhFwAAAAAAACIXAAAAAAAAAAAAACIXAAAAAAAAIxcAAAAAAAAAAAAAIxcAAAAAAAAkFwAAAAAAAAAAAAAkFwAAAAAAACUXAAAAAAAAAAAAACUXAAAAAAAAJhcAAAAAAAAAAAAAJhcAAAAAAAAnFwAAAAAAAAAAAAAnFwAAAAAAACgXAAAAAAAAAAAAACgXAAAAAAAAKRcAAAAAAAAAAAAAKRcAAAAAAAAqFwAAAAAAAAAAAAAqFwAAAAAAACsXAAAAAAAAAAAAACsXAAAAAAAALBcAAAAAAAAAAAAALBcAAAAAAAAtFwAAAAAAAAAAAAAtFwAAAAAAAC4XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxcAAAAAAAAfFwAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": "k_flags"
					},
					"BwAAAC4XAAAAAAAALxcAAAAAAAAAAAAALxcAAAAAAAAwFwAAAAAAAAAAAAAwFwAAAAAAADEXAAAAAAAAAAAAADEXAAAAAAAAMhcAAAAAAAAAAAAAMhcAAAAAAAAzFwAAAAAAAAAAAAAzFwAAAAAAADQXAAAAAAAAAAAAADQXAAAAAAAANRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhcAAAAAAAAuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADUXAAAAAAAANhcAAAAAAAAAAAAANhcAAAAAAAA3FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRcAAAAAAAA1FwAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADcXAAAAAAAAOBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxcAAAAAAAA3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADgXAAAAAAAAOhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBcAAAAAAAA4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "\nlibc_host_l"
					},
					"DAAAADoXAAAAAAAAOxcAAAAAAAAAAAAAOxcAAAAAAAA8FwAAAAAAAAAAAAA8FwAAAAAAAD0XAAAAAAAAAAAAAD0XAAAAAAAAPhcAAAAAAAAAAAAAPhcAAAAAAAA/FwAAAAAAAAAAAAA/FwAAAAAAAEAXAAAAAAAAAAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAABCFwAAAAAAAEMXAAAAAAAAAAAAAEMXAAAAAAAARBcAAAAAAAAAAAAARBcAAAAAAABFFwAAAAAAAAAAAABFFwAAAAAAAEYXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhcAAAAAAAA6FwAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "nk"
					},
					"AgAAAEYXAAAAAAAARxcAAAAAAAAAAAAARxcAAAAAAABIFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhcAAAAAAABGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					2,
					"left_delete",
					null,
					"AgAAAEcXAAAAAAAARxcAAAAAAAABAAAAa0YXAAAAAAAARhcAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAASBcAAAAAAABIFwAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "ink_f"
					},
					"BQAAAEYXAAAAAAAARxcAAAAAAAAAAAAARxcAAAAAAABIFwAAAAAAAAAAAABIFwAAAAAAAEkXAAAAAAAAAAAAAEkXAAAAAAAAShcAAAAAAAAAAAAAShcAAAAAAABLFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhcAAAAAAABGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": "lags"
					},
					"BAAAAEsXAAAAAAAATBcAAAAAAAAAAAAATBcAAAAAAABNFwAAAAAAAAAAAABNFwAAAAAAAE4XAAAAAAAAAAAAAE4XAAAAAAAATxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxcAAAAAAABLFwAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAE8XAAAAAAAAUBcAAAAAAAAAAAAAUBcAAAAAAABRFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxcAAAAAAABPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFEXAAAAAAAAUhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURcAAAAAAABRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFIXAAAAAAAAVBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhcAAAAAAABSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAABIcAAAAAAAAExwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBcAAAAAAABUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPoaAAAAAAAA+xoAAAAAAAAAAAAA+xoAAAAAAAD8GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hoAAAAAAAD6GgAAAAAAAP///////+9/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "link_args:"
					},
					"CgAAAPwaAAAAAAAA/RoAAAAAAAAAAAAA/RoAAAAAAAD+GgAAAAAAAAAAAAD+GgAAAAAAAP8aAAAAAAAAAAAAAP8aAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAABGwAAAAAAAAAAAAABGwAAAAAAAAIbAAAAAAAAAAAAAAIbAAAAAAAAAxsAAAAAAAAAAAAAAxsAAAAAAAAEGwAAAAAAAAAAAAAEGwAAAAAAAAUbAAAAAAAAAAAAAAUbAAAAAAAABhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BoAAAAAAAD8GgAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": " libc_host_li"
					},
					"DQAAAAYbAAAAAAAABxsAAAAAAAAAAAAABxsAAAAAAAAIGwAAAAAAAAAAAAAIGwAAAAAAAAkbAAAAAAAAAAAAAAkbAAAAAAAAChsAAAAAAAAAAAAAChsAAAAAAAALGwAAAAAAAAAAAAALGwAAAAAAAAwbAAAAAAAAAAAAAAwbAAAAAAAADRsAAAAAAAAAAAAADRsAAAAAAAAOGwAAAAAAAAAAAAAOGwAAAAAAAA8bAAAAAAAAAAAAAA8bAAAAAAAAEBsAAAAAAAAAAAAAEBsAAAAAAAARGwAAAAAAAAAAAAARGwAAAAAAABIbAAAAAAAAAAAAABIbAAAAAAAAExsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhsAAAAAAAAGGwAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "nk_flags,"
					},
					"CQAAABMbAAAAAAAAFBsAAAAAAAAAAAAAFBsAAAAAAAAVGwAAAAAAAAAAAAAVGwAAAAAAABYbAAAAAAAAAAAAABYbAAAAAAAAFxsAAAAAAAAAAAAAFxsAAAAAAAAYGwAAAAAAAAAAAAAYGwAAAAAAABkbAAAAAAAAAAAAABkbAAAAAAAAGhsAAAAAAAAAAAAAGhsAAAAAAAAbGwAAAAAAAAAAAAAbGwAAAAAAABwbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExsAAAAAAAATGwAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACAcAAAAAAAAIRwAAAAAAAAAAAAAIRwAAAAAAAAiHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBwAAAAAAAAgHAAAAAAAAP///////+9/"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": "link_args:"
					},
					"CgAAACIcAAAAAAAAIxwAAAAAAAAAAAAAIxwAAAAAAAAkHAAAAAAAAAAAAAAkHAAAAAAAACUcAAAAAAAAAAAAACUcAAAAAAAAJhwAAAAAAAAAAAAAJhwAAAAAAAAnHAAAAAAAAAAAAAAnHAAAAAAAACgcAAAAAAAAAAAAACgcAAAAAAAAKRwAAAAAAAAAAAAAKRwAAAAAAAAqHAAAAAAAAAAAAAAqHAAAAAAAACscAAAAAAAAAAAAACscAAAAAAAALBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhwAAAAAAAAiHAAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": " libc_nati"
					},
					"CgAAACwcAAAAAAAALRwAAAAAAAAAAAAALRwAAAAAAAAuHAAAAAAAAAAAAAAuHAAAAAAAAC8cAAAAAAAAAAAAAC8cAAAAAAAAMBwAAAAAAAAAAAAAMBwAAAAAAAAxHAAAAAAAAAAAAAAxHAAAAAAAADIcAAAAAAAAAAAAADIcAAAAAAAAMxwAAAAAAAAAAAAAMxwAAAAAAAA0HAAAAAAAAAAAAAA0HAAAAAAAADUcAAAAAAAAAAAAADUcAAAAAAAANhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBwAAAAAAAAsHAAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": "ve_link_flag"
					},
					"DAAAADYcAAAAAAAANxwAAAAAAAAAAAAANxwAAAAAAAA4HAAAAAAAAAAAAAA4HAAAAAAAADkcAAAAAAAAAAAAADkcAAAAAAAAOhwAAAAAAAAAAAAAOhwAAAAAAAA7HAAAAAAAAAAAAAA7HAAAAAAAADwcAAAAAAAAAAAAADwcAAAAAAAAPRwAAAAAAAAAAAAAPRwAAAAAAAA+HAAAAAAAAAAAAAA+HAAAAAAAAD8cAAAAAAAAAAAAAD8cAAAAAAAAQBwAAAAAAAAAAAAAQBwAAAAAAABBHAAAAAAAAAAAAABBHAAAAAAAAEIcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhwAAAAAAAA2HAAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "s,"
					},
					"AgAAAEIcAAAAAAAAQxwAAAAAAAAAAAAAQxwAAAAAAABEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhwAAAAAAABCHAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"doxy_enter",
					null,
					"AQAAAB4XAAAAAAAAHxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhcAAAAAAAAeFwAAAAAAAP///////+9/"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAB8XAAAAAAAAIBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxcAAAAAAAAfFwAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAXAAAAAAAAIRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBcAAAAAAAAgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "N"
					},
					"AQAAACEXAAAAAAAAIhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRcAAAAAAAAhFwAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "ote"
					},
					"AwAAACIXAAAAAAAAIxcAAAAAAAAAAAAAIxcAAAAAAAAkFwAAAAAAAAAAAAAkFwAAAAAAACUXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhcAAAAAAAAiFwAAAAAAAAAAAAAAAPC/"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAACUXAAAAAAAAJhcAAAAAAAAAAAAAJhcAAAAAAAAnFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRcAAAAAAAAlFwAAAAAAAAAAAAAAAPC/"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": " these"
					},
					"BgAAACcXAAAAAAAAKBcAAAAAAAAAAAAAKBcAAAAAAAApFwAAAAAAAAAAAAApFwAAAAAAACoXAAAAAAAAAAAAACoXAAAAAAAAKxcAAAAAAAAAAAAAKxcAAAAAAAAsFwAAAAAAAAAAAAAsFwAAAAAAAC0XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxcAAAAAAAAnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": " linker"
					},
					"BwAAAC0XAAAAAAAALhcAAAAAAAAAAAAALhcAAAAAAAAvFwAAAAAAAAAAAAAvFwAAAAAAADAXAAAAAAAAAAAAADAXAAAAAAAAMRcAAAAAAAAAAAAAMRcAAAAAAAAyFwAAAAAAAAAAAAAyFwAAAAAAADMXAAAAAAAAAAAAADMXAAAAAAAANBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRcAAAAAAAAtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": " flags"
					},
					"BgAAADQXAAAAAAAANRcAAAAAAAAAAAAANRcAAAAAAAA2FwAAAAAAAAAAAAA2FwAAAAAAADcXAAAAAAAAAAAAADcXAAAAAAAAOBcAAAAAAAAAAAAAOBcAAAAAAAA5FwAAAAAAAAAAAAA5FwAAAAAAADoXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBcAAAAAAAA0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": " aren't"
					},
					"BwAAADoXAAAAAAAAOxcAAAAAAAAAAAAAOxcAAAAAAAA8FwAAAAAAAAAAAAA8FwAAAAAAAD0XAAAAAAAAAAAAAD0XAAAAAAAAPhcAAAAAAAAAAAAAPhcAAAAAAAA/FwAAAAAAAAAAAAA/FwAAAAAAAEAXAAAAAAAAAAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhcAAAAAAAA6FwAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": " needed"
					},
					"BwAAAEEXAAAAAAAAQhcAAAAAAAAAAAAAQhcAAAAAAABDFwAAAAAAAAAAAABDFwAAAAAAAEQXAAAAAAAAAAAAAEQXAAAAAAAARRcAAAAAAAAAAAAARRcAAAAAAABGFwAAAAAAAAAAAABGFwAAAAAAAEcXAAAAAAAAAAAAAEcXAAAAAAAASBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRcAAAAAAABBFwAAAAAAAAAAAAAAAPC/"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": " when"
					},
					"BQAAAEgXAAAAAAAASRcAAAAAAAAAAAAASRcAAAAAAABKFwAAAAAAAAAAAABKFwAAAAAAAEsXAAAAAAAAAAAAAEsXAAAAAAAATBcAAAAAAAAAAAAATBcAAAAAAABNFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASBcAAAAAAABIFwAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": " compiling"
					},
					"CgAAAE0XAAAAAAAAThcAAAAAAAAAAAAAThcAAAAAAABPFwAAAAAAAAAAAABPFwAAAAAAAFAXAAAAAAAAAAAAAFAXAAAAAAAAURcAAAAAAAAAAAAAURcAAAAAAABSFwAAAAAAAAAAAABSFwAAAAAAAFMXAAAAAAAAAAAAAFMXAAAAAAAAVBcAAAAAAAAAAAAAVBcAAAAAAABVFwAAAAAAAAAAAABVFwAAAAAAAFYXAAAAAAAAAAAAAFYXAAAAAAAAVxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRcAAAAAAABNFwAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAFcXAAAAAAAAWBcAAAAAAAAAAAAAWBcAAAAAAABZFwAAAAAAAAAAAABZFwAAAAAAAFoXAAAAAAAAAAAAAFoXAAAAAAAAWxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxcAAAAAAABXFwAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": " libc"
					},
					"BQAAAFsXAAAAAAAAXBcAAAAAAAAAAAAAXBcAAAAAAABdFwAAAAAAAAAAAABdFwAAAAAAAF4XAAAAAAAAAAAAAF4XAAAAAAAAXxcAAAAAAAAAAAAAXxcAAAAAAABgFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxcAAAAAAABbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"insert",
					{
						"characters": " project"
					},
					"CAAAAGAXAAAAAAAAYRcAAAAAAAAAAAAAYRcAAAAAAABiFwAAAAAAAAAAAABiFwAAAAAAAGMXAAAAAAAAAAAAAGMXAAAAAAAAZBcAAAAAAAAAAAAAZBcAAAAAAABlFwAAAAAAAAAAAABlFwAAAAAAAGYXAAAAAAAAAAAAAGYXAAAAAAAAZxcAAAAAAAAAAAAAZxcAAAAAAABoFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBcAAAAAAABgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": " itself,"
					},
					"CAAAAGgXAAAAAAAAaRcAAAAAAAAAAAAAaRcAAAAAAABqFwAAAAAAAAAAAABqFwAAAAAAAGsXAAAAAAAAAAAAAGsXAAAAAAAAbBcAAAAAAAAAAAAAbBcAAAAAAABtFwAAAAAAAAAAAABtFwAAAAAAAG4XAAAAAAAAAAAAAG4XAAAAAAAAbxcAAAAAAAAAAAAAbxcAAAAAAABwFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBcAAAAAAABoFwAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": " they'r"
					},
					"BwAAAHAXAAAAAAAAcRcAAAAAAAAAAAAAcRcAAAAAAAByFwAAAAAAAAAAAAByFwAAAAAAAHMXAAAAAAAAAAAAAHMXAAAAAAAAdBcAAAAAAAAAAAAAdBcAAAAAAAB1FwAAAAAAAAAAAAB1FwAAAAAAAHYXAAAAAAAAAAAAAHYXAAAAAAAAdxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBcAAAAAAABwFwAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAHcXAAAAAAAAeBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxcAAAAAAAB3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": " used"
					},
					"BQAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAB6FwAAAAAAAHsXAAAAAAAAAAAAAHsXAAAAAAAAfBcAAAAAAAAAAAAAfBcAAAAAAAB9FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBcAAAAAAAB4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": " by"
					},
					"AwAAAH0XAAAAAAAAfhcAAAAAAAAAAAAAfhcAAAAAAAB/FwAAAAAAAAAAAAB/FwAAAAAAAIAXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRcAAAAAAAB9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": " downstream"
					},
					"CwAAAIAXAAAAAAAAgRcAAAAAAAAAAAAAgRcAAAAAAACCFwAAAAAAAAAAAACCFwAAAAAAAIMXAAAAAAAAAAAAAIMXAAAAAAAAhBcAAAAAAAAAAAAAhBcAAAAAAACFFwAAAAAAAAAAAACFFwAAAAAAAIYXAAAAAAAAAAAAAIYXAAAAAAAAhxcAAAAAAAAAAAAAhxcAAAAAAACIFwAAAAAAAAAAAACIFwAAAAAAAIkXAAAAAAAAAAAAAIkXAAAAAAAAihcAAAAAAAAAAAAAihcAAAAAAACLFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBcAAAAAAACAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": " modules"
					},
					"CAAAAIsXAAAAAAAAjBcAAAAAAAAAAAAAjBcAAAAAAACNFwAAAAAAAAAAAACNFwAAAAAAAI4XAAAAAAAAAAAAAI4XAAAAAAAAjxcAAAAAAAAAAAAAjxcAAAAAAACQFwAAAAAAAAAAAACQFwAAAAAAAJEXAAAAAAAAAAAAAJEXAAAAAAAAkhcAAAAAAAAAAAAAkhcAAAAAAACTFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixcAAAAAAACLFwAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"doxy_enter",
					null,
					"AQAAAJMXAAAAAAAAlhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxcAAAAAAACTFwAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAJYXAAAAAAAAlxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhcAAAAAAACWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"left_delete",
					null,
					"AQAAAJYXAAAAAAAAlhcAAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAAlxcAAAAAAACXFwAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "to"
					},
					"AgAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACYFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhcAAAAAAACWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					2,
					"left_delete",
					null,
					"AgAAAJcXAAAAAAAAlxcAAAAAAAABAAAAb5YXAAAAAAAAlhcAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAmBcAAAAAAACYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "To"
					},
					"AgAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACYFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhcAAAAAAACWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAJgXAAAAAAAAmRcAAAAAAAAAAAAAmRcAAAAAAACaFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBcAAAAAAACYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					4,
					"left_delete",
					null,
					"BAAAAJkXAAAAAAAAmRcAAAAAAAABAAAAZZgXAAAAAAAAmBcAAAAAAAABAAAAIJcXAAAAAAAAlxcAAAAAAAABAAAAb5YXAAAAAAAAlhcAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAmhcAAAAAAACaFwAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "to"
					},
					"AgAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACYFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhcAAAAAAACWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": " ensure"
					},
					"BwAAAJgXAAAAAAAAmRcAAAAAAAAAAAAAmRcAAAAAAACaFwAAAAAAAAAAAACaFwAAAAAAAJsXAAAAAAAAAAAAAJsXAAAAAAAAnBcAAAAAAAAAAAAAnBcAAAAAAACdFwAAAAAAAAAAAACdFwAAAAAAAJ4XAAAAAAAAAAAAAJ4XAAAAAAAAnxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBcAAAAAAACYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					1,
					"insert",
					{
						"characters": " that"
					},
					"BQAAAJ8XAAAAAAAAoBcAAAAAAAAAAAAAoBcAAAAAAAChFwAAAAAAAAAAAAChFwAAAAAAAKIXAAAAAAAAAAAAAKIXAAAAAAAAoxcAAAAAAAAAAAAAoxcAAAAAAACkFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxcAAAAAAACfFwAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": " they"
					},
					"BQAAAKQXAAAAAAAApRcAAAAAAAAAAAAApRcAAAAAAACmFwAAAAAAAAAAAACmFwAAAAAAAKcXAAAAAAAAAAAAAKcXAAAAAAAAqBcAAAAAAAAAAAAAqBcAAAAAAACpFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBcAAAAAAACkFwAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert",
					{
						"characters": " actually"
					},
					"CQAAAKkXAAAAAAAAqhcAAAAAAAAAAAAAqhcAAAAAAACrFwAAAAAAAAAAAACrFwAAAAAAAKwXAAAAAAAAAAAAAKwXAAAAAAAArRcAAAAAAAAAAAAArRcAAAAAAACuFwAAAAAAAAAAAACuFwAAAAAAAK8XAAAAAAAAAAAAAK8XAAAAAAAAsBcAAAAAAAAAAAAAsBcAAAAAAACxFwAAAAAAAAAAAACxFwAAAAAAALIXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRcAAAAAAACpFwAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAALIXAAAAAAAAsxcAAAAAAAAAAAAAsxcAAAAAAAC0FwAAAAAAAAAAAAC0FwAAAAAAALUXAAAAAAAAAAAAALUXAAAAAAAAthcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshcAAAAAAACyFwAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAALYXAAAAAAAAtxcAAAAAAAAAAAAAtxcAAAAAAAC4FwAAAAAAAAAAAAC4FwAAAAAAALkXAAAAAAAAAAAAALkXAAAAAAAAuhcAAAAAAAAAAAAAuhcAAAAAAAC7FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAthcAAAAAAAC2FwAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": " libc"
					},
					"BQAAALsXAAAAAAAAvBcAAAAAAAAAAAAAvBcAAAAAAAC9FwAAAAAAAAAAAAC9FwAAAAAAAL4XAAAAAAAAAAAAAL4XAAAAAAAAvxcAAAAAAAAAAAAAvxcAAAAAAADAFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxcAAAAAAAC7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": " rather"
					},
					"BwAAAMAXAAAAAAAAwRcAAAAAAAAAAAAAwRcAAAAAAADCFwAAAAAAAAAAAADCFwAAAAAAAMMXAAAAAAAAAAAAAMMXAAAAAAAAxBcAAAAAAAAAAAAAxBcAAAAAAADFFwAAAAAAAAAAAADFFwAAAAAAAMYXAAAAAAAAAAAAAMYXAAAAAAAAxxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwBcAAAAAAADAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert",
					{
						"characters": " than"
					},
					"BQAAAMcXAAAAAAAAyBcAAAAAAAAAAAAAyBcAAAAAAADJFwAAAAAAAAAAAADJFwAAAAAAAMoXAAAAAAAAAAAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADMFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxcAAAAAAADHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": " using"
					},
					"BgAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADOFwAAAAAAAAAAAADOFwAAAAAAAM8XAAAAAAAAAAAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA0BcAAAAAAADRFwAAAAAAAAAAAADRFwAAAAAAANIXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBcAAAAAAADMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAANIXAAAAAAAA0xcAAAAAAAAAAAAA0xcAAAAAAADUFwAAAAAAAAAAAADUFwAAAAAAANUXAAAAAAAAAAAAANUXAAAAAAAA1hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hcAAAAAAADSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": " compiler-provide"
					},
					"EQAAANYXAAAAAAAA1xcAAAAAAAAAAAAA1xcAAAAAAADYFwAAAAAAAAAAAADYFwAAAAAAANkXAAAAAAAAAAAAANkXAAAAAAAA2hcAAAAAAAAAAAAA2hcAAAAAAADbFwAAAAAAAAAAAADbFwAAAAAAANwXAAAAAAAAAAAAANwXAAAAAAAA3RcAAAAAAAAAAAAA3RcAAAAAAADeFwAAAAAAAAAAAADeFwAAAAAAAN8XAAAAAAAAAAAAAN8XAAAAAAAA4BcAAAAAAAAAAAAA4BcAAAAAAADhFwAAAAAAAAAAAADhFwAAAAAAAOIXAAAAAAAAAAAAAOIXAAAAAAAA4xcAAAAAAAAAAAAA4xcAAAAAAADkFwAAAAAAAAAAAADkFwAAAAAAAOUXAAAAAAAAAAAAAOUXAAAAAAAA5hcAAAAAAAAAAAAA5hcAAAAAAADnFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hcAAAAAAADWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAOcXAAAAAAAA6BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xcAAAAAAADnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": " version"
					},
					"CAAAAOgXAAAAAAAA6RcAAAAAAAAAAAAA6RcAAAAAAADqFwAAAAAAAAAAAADqFwAAAAAAAOsXAAAAAAAAAAAAAOsXAAAAAAAA7BcAAAAAAAAAAAAA7BcAAAAAAADtFwAAAAAAAAAAAADtFwAAAAAAAO4XAAAAAAAAAAAAAO4XAAAAAAAA7xcAAAAAAAAAAAAA7xcAAAAAAADwFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BcAAAAAAADoFwAAAAAAAAAAAAAAAPC/"
				],
				[
					606,
					1,
					"insert",
					{
						"characters": "="
					},
					"BAAAACQYAAAAAAAAJRgAAAAAAAAAAAAAJRgAAAAAAAAlGAAAAAAAAAIAAABbXQoYAAAAAAAACxgAAAAAAAAAAAAACxgAAAAAAAALGAAAAAAAAAIAAABbXQ",
					"AQAAAAAAAAACAAAAChgAAAAAAAAMGAAAAAAAAP///////+9/JBgAAAAAAAAmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": " get_"
					},
					"CgAAACQYAAAAAAAAJRgAAAAAAAAAAAAACxgAAAAAAAAMGAAAAAAAAAAAAAAmGAAAAAAAACcYAAAAAAAAAAAAAAwYAAAAAAAADRgAAAAAAAAAAAAAKBgAAAAAAAApGAAAAAAAAAAAAAANGAAAAAAAAA4YAAAAAAAAAAAAACoYAAAAAAAAKxgAAAAAAAAAAAAADhgAAAAAAAAPGAAAAAAAAAAAAAAsGAAAAAAAAC0YAAAAAAAAAAAAAA8YAAAAAAAAEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/JBgAAAAAAAAkGAAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					4,
					"left_delete",
					null,
					"CAAAAC0YAAAAAAAALRgAAAAAAAABAAAAXw8YAAAAAAAADxgAAAAAAAABAAAAXysYAAAAAAAAKxgAAAAAAAABAAAAdA4YAAAAAAAADhgAAAAAAAABAAAAdCkYAAAAAAAAKRgAAAAAAAABAAAAZQ0YAAAAAAAADRgAAAAAAAABAAAAZScYAAAAAAAAJxgAAAAAAAABAAAAZwwYAAAAAAAADBgAAAAAAAABAAAAZw",
					"AQAAAAAAAAACAAAAEBgAAAAAAAAQGAAAAAAAAAAAAAAAAPC/LhgAAAAAAAAuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AgAAACYYAAAAAAAAJxgAAAAAAAAAAAAADBgAAAAAAAANGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAPC/JhgAAAAAAAAmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					612,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAACgYAAAAAAAAKRgAAAAAAAAAAAAADRgAAAAAAAAOGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAADRgAAAAAAAANGAAAAAAAAAAAAAAAAPC/KBgAAAAAAAAoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AgAAACoYAAAAAAAAKxgAAAAAAAAAAAAADhgAAAAAAAAPGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAADhgAAAAAAAAOGAAAAAAAAAAAAAAAAPC/KhgAAAAAAAAqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": "compiler"
					},
					"EAAAACwYAAAAAAAALRgAAAAAAAAAAAAADxgAAAAAAAAQGAAAAAAAAAAAAAAuGAAAAAAAAC8YAAAAAAAAAAAAABAYAAAAAAAAERgAAAAAAAAAAAAAMBgAAAAAAAAxGAAAAAAAAAAAAAARGAAAAAAAABIYAAAAAAAAAAAAADIYAAAAAAAAMxgAAAAAAAAAAAAAEhgAAAAAAAATGAAAAAAAAAAAAAA0GAAAAAAAADUYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAANhgAAAAAAAA3GAAAAAAAAAAAAAAUGAAAAAAAABUYAAAAAAAAAAAAADgYAAAAAAAAORgAAAAAAAAAAAAAFRgAAAAAAAAWGAAAAAAAAAAAAAA6GAAAAAAAADsYAAAAAAAAAAAAABYYAAAAAAAAFxgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAADxgAAAAAAAAPGAAAAAAAAAAAAAAAAPC/LBgAAAAAAAAsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": ".get_support"
					},
					"GAAAADwYAAAAAAAAPRgAAAAAAAAAAAAAFxgAAAAAAAAYGAAAAAAAAAAAAAA+GAAAAAAAAD8YAAAAAAAAAAAAABgYAAAAAAAAGRgAAAAAAAAAAAAAQBgAAAAAAABBGAAAAAAAAAAAAAAZGAAAAAAAABoYAAAAAAAAAAAAAEIYAAAAAAAAQxgAAAAAAAAAAAAAGhgAAAAAAAAbGAAAAAAAAAAAAABEGAAAAAAAAEUYAAAAAAAAAAAAABsYAAAAAAAAHBgAAAAAAAAAAAAARhgAAAAAAABHGAAAAAAAAAAAAAAcGAAAAAAAAB0YAAAAAAAAAAAAAEgYAAAAAAAASRgAAAAAAAAAAAAAHRgAAAAAAAAeGAAAAAAAAAAAAABKGAAAAAAAAEsYAAAAAAAAAAAAAB4YAAAAAAAAHxgAAAAAAAAAAAAATBgAAAAAAABNGAAAAAAAAAAAAAAfGAAAAAAAACAYAAAAAAAAAAAAAE4YAAAAAAAATxgAAAAAAAAAAAAAIBgAAAAAAAAhGAAAAAAAAAAAAABQGAAAAAAAAFEYAAAAAAAAAAAAACEYAAAAAAAAIhgAAAAAAAAAAAAAUhgAAAAAAABTGAAAAAAAAAAAAAAiGAAAAAAAACMYAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAFxgAAAAAAAAXGAAAAAAAAAAAAAAAAPC/PBgAAAAAAAA8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": "ed_link_argu"
					},
					"GAAAAFQYAAAAAAAAVRgAAAAAAAAAAAAAIxgAAAAAAAAkGAAAAAAAAAAAAABWGAAAAAAAAFcYAAAAAAAAAAAAACQYAAAAAAAAJRgAAAAAAAAAAAAAWBgAAAAAAABZGAAAAAAAAAAAAAAlGAAAAAAAACYYAAAAAAAAAAAAAFoYAAAAAAAAWxgAAAAAAAAAAAAAJhgAAAAAAAAnGAAAAAAAAAAAAABcGAAAAAAAAF0YAAAAAAAAAAAAACcYAAAAAAAAKBgAAAAAAAAAAAAAXhgAAAAAAABfGAAAAAAAAAAAAAAoGAAAAAAAACkYAAAAAAAAAAAAAGAYAAAAAAAAYRgAAAAAAAAAAAAAKRgAAAAAAAAqGAAAAAAAAAAAAABiGAAAAAAAAGMYAAAAAAAAAAAAACoYAAAAAAAAKxgAAAAAAAAAAAAAZBgAAAAAAABlGAAAAAAAAAAAAAArGAAAAAAAACwYAAAAAAAAAAAAAGYYAAAAAAAAZxgAAAAAAAAAAAAALBgAAAAAAAAtGAAAAAAAAAAAAABoGAAAAAAAAGkYAAAAAAAAAAAAAC0YAAAAAAAALhgAAAAAAAAAAAAAahgAAAAAAABrGAAAAAAAAAAAAAAuGAAAAAAAAC8YAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAIxgAAAAAAAAjGAAAAAAAAAAAAAAAAPC/VBgAAAAAAABUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "ments"
					},
					"CgAAAGwYAAAAAAAAbRgAAAAAAAAAAAAALxgAAAAAAAAwGAAAAAAAAAAAAABuGAAAAAAAAG8YAAAAAAAAAAAAADAYAAAAAAAAMRgAAAAAAAAAAAAAcBgAAAAAAABxGAAAAAAAAAAAAAAxGAAAAAAAADIYAAAAAAAAAAAAAHIYAAAAAAAAcxgAAAAAAAAAAAAAMhgAAAAAAAAzGAAAAAAAAAAAAAB0GAAAAAAAAHUYAAAAAAAAAAAAADMYAAAAAAAANBgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAALxgAAAAAAAAvGAAAAAAAAAAAAAAAAPC/bBgAAAAAAABsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAADQYAAAAAAAANhgAAAAAAAAAAAAAeBgAAAAAAAB6GAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAANBgAAAAAAAA0GAAAAAAAAAAAAAAAAPC/dhgAAAAAAAB2GAAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAHkYAAAAAAAAehgAAAAAAAAAAAAANRgAAAAAAAA2GAAAAAAAAAAAAAB7GAAAAAAAAHwYAAAAAAAAAAAAADYYAAAAAAAANxgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAANRgAAAAAAAA1GAAAAAAAAAAAAAAAAPC/eRgAAAAAAAB5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					1,
					"left_delete",
					null,
					"AgAAAHwYAAAAAAAAfBgAAAAAAAABAAAACTYYAAAAAAAANhgAAAAAAAABAAAACQ",
					"AQAAAAAAAAACAAAANxgAAAAAAAA3GAAAAAAAAAAAAAAAAPC/fRgAAAAAAAB9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					625,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHsYAAAAAAAAfBgAAAAAAAAAAAAANhgAAAAAAAA3GAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAANhgAAAAAAAA2GAAAAAAAAAAAAAAAAPC/exgAAAAAAAB7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"reindent",
					null,
					"AgAAADYYAAAAAAAANxgAAAAAAAAAAAAAfRgAAAAAAAB+GAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAANhgAAAAAAAA2GAAAAAAAAAAAAAAAAAAAfBgAAAAAAAB8GAAAAAAAAAAAAAAAAAAA"
				],
				[
					630,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AgAAADcYAAAAAAAAORgAAAAAAAAAAAAAgBgAAAAAAACCGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAANxgAAAAAAAA3GAAAAAAAAAAAAAAAAPC/fhgAAAAAAAB+GAAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AgAAAIEYAAAAAAAAghgAAAAAAAAAAAAAOBgAAAAAAAA5GAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAOBgAAAAAAAA4GAAAAAAAAAAAAAAAAPC/gRgAAAAAAACBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": "nolibc"
					},
					"DAAAAIMYAAAAAAAAhBgAAAAAAAAAAAAAORgAAAAAAAA6GAAAAAAAAAAAAACFGAAAAAAAAIYYAAAAAAAAAAAAADoYAAAAAAAAOxgAAAAAAAAAAAAAhxgAAAAAAACIGAAAAAAAAAAAAAA7GAAAAAAAADwYAAAAAAAAAAAAAIkYAAAAAAAAihgAAAAAAAAAAAAAPBgAAAAAAAA9GAAAAAAAAAAAAACLGAAAAAAAAIwYAAAAAAAAAAAAAD0YAAAAAAAAPhgAAAAAAAAAAAAAjRgAAAAAAACOGAAAAAAAAAAAAAA+GAAAAAAAAD8YAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAORgAAAAAAAA5GAAAAAAAAAAAAAAAAPC/gxgAAAAAAACDGAAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAJAYAAAAAAAAkRgAAAAAAAAAAAAAQBgAAAAAAABBGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAQBgAAAAAAABAGAAAAAAAAAAAAAAAAPC/kBgAAAAAAACQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert",
					{
						"characters": " #Do"
					},
					"CAAAAJIYAAAAAAAAkxgAAAAAAAAAAAAAQRgAAAAAAABCGAAAAAAAAAAAAACUGAAAAAAAAJUYAAAAAAAAAAAAAEIYAAAAAAAAQxgAAAAAAAAAAAAAlhgAAAAAAACXGAAAAAAAAAAAAABDGAAAAAAAAEQYAAAAAAAAAAAAAJgYAAAAAAAAmRgAAAAAAAAAAAAARBgAAAAAAABFGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAQRgAAAAAAABBGAAAAAAAAAAAAAAAAPC/khgAAAAAAACSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": " not"
					},
					"CAAAAJoYAAAAAAAAmxgAAAAAAAAAAAAARRgAAAAAAABGGAAAAAAAAAAAAACcGAAAAAAAAJ0YAAAAAAAAAAAAAEYYAAAAAAAARxgAAAAAAAAAAAAAnhgAAAAAAACfGAAAAAAAAAAAAABHGAAAAAAAAEgYAAAAAAAAAAAAAKAYAAAAAAAAoRgAAAAAAAAAAAAASBgAAAAAAABJGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAARRgAAAAAAABFGAAAAAAAAAAAAAAAAPC/mhgAAAAAAACaGAAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": " use"
					},
					"CAAAAKIYAAAAAAAAoxgAAAAAAAAAAAAASRgAAAAAAABKGAAAAAAAAAAAAACkGAAAAAAAAKUYAAAAAAAAAAAAAEoYAAAAAAAASxgAAAAAAAAAAAAAphgAAAAAAACnGAAAAAAAAAAAAABLGAAAAAAAAEwYAAAAAAAAAAAAAKgYAAAAAAAAqRgAAAAAAAAAAAAATBgAAAAAAABNGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAASRgAAAAAAABJGAAAAAAAAAAAAAAAAPC/ohgAAAAAAACiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": " the"
					},
					"CAAAAKoYAAAAAAAAqxgAAAAAAAAAAAAATRgAAAAAAABOGAAAAAAAAAAAAACsGAAAAAAAAK0YAAAAAAAAAAAAAE4YAAAAAAAATxgAAAAAAAAAAAAArhgAAAAAAACvGAAAAAAAAAAAAABPGAAAAAAAAFAYAAAAAAAAAAAAALAYAAAAAAAAsRgAAAAAAAAAAAAAUBgAAAAAAABRGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAATRgAAAAAAABNGAAAAAAAAAAAAAAAAPC/qhgAAAAAAACqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": " C"
					},
					"BAAAALIYAAAAAAAAsxgAAAAAAAAAAAAAURgAAAAAAABSGAAAAAAAAAAAAAC0GAAAAAAAALUYAAAAAAAAAAAAAFIYAAAAAAAAUxgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAURgAAAAAAABRGAAAAAAAAAAAAAAAAPC/shgAAAAAAACyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": " library"
					},
					"EAAAALYYAAAAAAAAtxgAAAAAAAAAAAAAUxgAAAAAAABUGAAAAAAAAAAAAAC4GAAAAAAAALkYAAAAAAAAAAAAAFQYAAAAAAAAVRgAAAAAAAAAAAAAuhgAAAAAAAC7GAAAAAAAAAAAAABVGAAAAAAAAFYYAAAAAAAAAAAAALwYAAAAAAAAvRgAAAAAAAAAAAAAVhgAAAAAAABXGAAAAAAAAAAAAAC+GAAAAAAAAL8YAAAAAAAAAAAAAFcYAAAAAAAAWBgAAAAAAAAAAAAAwBgAAAAAAADBGAAAAAAAAAAAAABYGAAAAAAAAFkYAAAAAAAAAAAAAMIYAAAAAAAAwxgAAAAAAAAAAAAAWRgAAAAAAABaGAAAAAAAAAAAAADEGAAAAAAAAMUYAAAAAAAAAAAAAFoYAAAAAAAAWxgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAUxgAAAAAAABTGAAAAAAAAAAAAAAAAPC/thgAAAAAAAC2GAAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": " or"
					},
					"BgAAAMYYAAAAAAAAxxgAAAAAAAAAAAAAWxgAAAAAAABcGAAAAAAAAAAAAADIGAAAAAAAAMkYAAAAAAAAAAAAAFwYAAAAAAAAXRgAAAAAAAAAAAAAyhgAAAAAAADLGAAAAAAAAAAAAABdGAAAAAAAAF4YAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAWxgAAAAAAABbGAAAAAAAAAAAAAAAAPC/xhgAAAAAAADGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": " system"
					},
					"DgAAAMwYAAAAAAAAzRgAAAAAAAAAAAAAXhgAAAAAAABfGAAAAAAAAAAAAADOGAAAAAAAAM8YAAAAAAAAAAAAAF8YAAAAAAAAYBgAAAAAAAAAAAAA0BgAAAAAAADRGAAAAAAAAAAAAABgGAAAAAAAAGEYAAAAAAAAAAAAANIYAAAAAAAA0xgAAAAAAAAAAAAAYRgAAAAAAABiGAAAAAAAAAAAAADUGAAAAAAAANUYAAAAAAAAAAAAAGIYAAAAAAAAYxgAAAAAAAAAAAAA1hgAAAAAAADXGAAAAAAAAAAAAABjGAAAAAAAAGQYAAAAAAAAAAAAANgYAAAAAAAA2RgAAAAAAAAAAAAAZBgAAAAAAABlGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAXhgAAAAAAABeGAAAAAAAAAAAAAAAAPC/zBgAAAAAAADMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": " libraries"
					},
					"FAAAANoYAAAAAAAA2xgAAAAAAAAAAAAAZRgAAAAAAABmGAAAAAAAAAAAAADcGAAAAAAAAN0YAAAAAAAAAAAAAGYYAAAAAAAAZxgAAAAAAAAAAAAA3hgAAAAAAADfGAAAAAAAAAAAAABnGAAAAAAAAGgYAAAAAAAAAAAAAOAYAAAAAAAA4RgAAAAAAAAAAAAAaBgAAAAAAABpGAAAAAAAAAAAAADiGAAAAAAAAOMYAAAAAAAAAAAAAGkYAAAAAAAAahgAAAAAAAAAAAAA5BgAAAAAAADlGAAAAAAAAAAAAABqGAAAAAAAAGsYAAAAAAAAAAAAAOYYAAAAAAAA5xgAAAAAAAAAAAAAaxgAAAAAAABsGAAAAAAAAAAAAADoGAAAAAAAAOkYAAAAAAAAAAAAAGwYAAAAAAAAbRgAAAAAAAAAAAAA6hgAAAAAAADrGAAAAAAAAAAAAABtGAAAAAAAAG4YAAAAAAAAAAAAAOwYAAAAAAAA7RgAAAAAAAAAAAAAbhgAAAAAAABvGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAZRgAAAAAAABlGAAAAAAAAAAAAAAAAPC/2hgAAAAAAADaGAAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"insert",
					{
						"characters": " tightly"
					},
					"EAAAAO4YAAAAAAAA7xgAAAAAAAAAAAAAbxgAAAAAAABwGAAAAAAAAAAAAADwGAAAAAAAAPEYAAAAAAAAAAAAAHAYAAAAAAAAcRgAAAAAAAAAAAAA8hgAAAAAAADzGAAAAAAAAAAAAABxGAAAAAAAAHIYAAAAAAAAAAAAAPQYAAAAAAAA9RgAAAAAAAAAAAAAchgAAAAAAABzGAAAAAAAAAAAAAD2GAAAAAAAAPcYAAAAAAAAAAAAAHMYAAAAAAAAdBgAAAAAAAAAAAAA+BgAAAAAAAD5GAAAAAAAAAAAAAB0GAAAAAAAAHUYAAAAAAAAAAAAAPoYAAAAAAAA+xgAAAAAAAAAAAAAdRgAAAAAAAB2GAAAAAAAAAAAAAD8GAAAAAAAAP0YAAAAAAAAAAAAAHYYAAAAAAAAdxgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAbxgAAAAAAABvGAAAAAAAAAAAAAAAAPC/7hgAAAAAAADuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"insert",
					{
						"characters": "native"
					},
					"BgAAAAwYAAAAAAAADRgAAAAAAAAAAAAADRgAAAAAAAAOGAAAAAAAAAAAAAAOGAAAAAAAAA8YAAAAAAAAAAAAAA8YAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAARGAAAAAAAAAAAAAARGAAAAAAAABIYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": "host"
					},
					"BAAAAJkYAAAAAAAAmhgAAAAAAAAAAAAAmhgAAAAAAACbGAAAAAAAAAAAAACbGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAnRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRgAAAAAAACZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"left_delete",
					null,
					"AQAAAAoYAAAAAAAAChgAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"left_delete",
					null,
					"AQAAAAkYAAAAAAAACRgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAChgAAAAAAAAKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"left_delete",
					null,
					"AQAAAJQYAAAAAAAAlBgAAAAAAAACAAAAID0",
					"AQAAAAAAAAABAAAAlhgAAAAAAACUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": "native"
					},
					"BwAAAL4cAAAAAAAAvxwAAAAAAAAAAAAAvxwAAAAAAAC/HAAAAAAAAAQAAABob3N0vxwAAAAAAADAHAAAAAAAAAAAAADAHAAAAAAAAMEcAAAAAAAAAAAAAMEcAAAAAAAAwhwAAAAAAAAAAAAAwhwAAAAAAADDHAAAAAAAAAAAAADDHAAAAAAAAMQcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": "host"
					},
					"BQAAAOYdAAAAAAAA5x0AAAAAAAAAAAAA5x0AAAAAAADnHQAAAAAAAAYAAABuYXRpdmXnHQAAAAAAAOgdAAAAAAAAAAAAAOgdAAAAAAAA6R0AAAAAAAAAAAAA6R0AAAAAAADqHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7B0AAAAAAADmHQAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"doxy_enter",
					null,
					"BAAAAAQZAAAAAAAABRkAAAAAAAAAAAAABRkAAAAAAAAGGQAAAAAAAAAAAAB7GAAAAAAAAHwYAAAAAAAAAAAAAHwYAAAAAAAAfRgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAexgAAAAAAAB7GAAAAAAAAP///////+9/BBkAAAAAAAAEGQAAAAAAAP///////+9/"
				],
				[
					843,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AgAAAH0YAAAAAAAAfxgAAAAAAAAAAAAAChkAAAAAAAAMGQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAfRgAAAAAAAB9GAAAAAAAAAAAAAAAAPC/CBkAAAAAAAAIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AgAAAAsZAAAAAAAADBkAAAAAAAAAAAAAfhgAAAAAAAB/GAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAfhgAAAAAAAB+GAAAAAAAAAAAAAAAAPC/CxkAAAAAAAALGQAAAAAAAAAAAAAAAPC/"
				],
				[
					847,
					1,
					"insert",
					{
						"characters": "nostdlib"
					},
					"EAAAAA0ZAAAAAAAADhkAAAAAAAAAAAAAfxgAAAAAAACAGAAAAAAAAAAAAAAPGQAAAAAAABAZAAAAAAAAAAAAAIAYAAAAAAAAgRgAAAAAAAAAAAAAERkAAAAAAAASGQAAAAAAAAAAAACBGAAAAAAAAIIYAAAAAAAAAAAAABMZAAAAAAAAFBkAAAAAAAAAAAAAghgAAAAAAACDGAAAAAAAAAAAAAAVGQAAAAAAABYZAAAAAAAAAAAAAIMYAAAAAAAAhBgAAAAAAAAAAAAAFxkAAAAAAAAYGQAAAAAAAAAAAACEGAAAAAAAAIUYAAAAAAAAAAAAABkZAAAAAAAAGhkAAAAAAAAAAAAAhRgAAAAAAACGGAAAAAAAAAAAAAAbGQAAAAAAABwZAAAAAAAAAAAAAIYYAAAAAAAAhxgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAfxgAAAAAAAB/GAAAAAAAAAAAAAAAAPC/DRkAAAAAAAANGQAAAAAAAAAAAAAAAPC/"
				],
				[
					853,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAB4ZAAAAAAAAHxkAAAAAAAAAAAAAiBgAAAAAAACJGAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAiBgAAAAAAACIGAAAAAAAAAAAAAAAAPC/HhkAAAAAAAAeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"left_delete",
					null,
					"AgAAANwYAAAAAAAA3BgAAAAAAAA2AAAAICNEbyBub3QgdXNlIHRoZSBDIGxpYnJhcnkgb3Igc3lzdGVtIGxpYnJhcmllcyB0aWdodGx5RRgAAAAAAABFGAAAAAAAADYAAAAgI0RvIG5vdCB1c2UgdGhlIEMgbGlicmFyeSBvciBzeXN0ZW0gbGlicmFyaWVzIHRpZ2h0bHk",
					"AQAAAAAAAAACAAAARRgAAAAAAAB7GAAAAAAAAP///////+9/3BgAAAAAAAASGQAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					2,
					"right_delete",
					null,
					"AgAAACoYAAAAAAAAKhgAAAAAAAAEAAAAbGluayoYAAAAAAAAKhgAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAKhgAAAAAAAAuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"right_delete",
					null,
					"AQAAAIUYAAAAAAAAhRgAAAAAAAAFAAAAX2xpbms",
					"AQAAAAAAAAABAAAAihgAAAAAAACFGAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libc-skeleton/buildresults/compile_commands.json",
			"settings":
			{
				"buffer_size": 393282,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libc-skeleton/subprojects/packagefiles/printf/meson.build",
			"settings":
			{
				"buffer_size": 1331,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABVBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAkHFA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "printf_"
					},
					"BwAAAFUEAAAAAAAAVgQAAAAAAAAAAAAAVgQAAAAAAABXBAAAAAAAAAAAAABXBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAWQQAAAAAAAAAAAAAWQQAAAAAAABaBAAAAAAAAAAAAABaBAAAAAAAAFsEAAAAAAAAAAAAAFsEAAAAAAAAXAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQQAAAAAAABVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "files_dep"
					},
					"CQAAAFwEAAAAAAAAXQQAAAAAAAAAAAAAXQQAAAAAAABeBAAAAAAAAAAAAABeBAAAAAAAAF8EAAAAAAAAAAAAAF8EAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABhBAAAAAAAAAAAAABhBAAAAAAAAGIEAAAAAAAAAAAAAGIEAAAAAAAAYwQAAAAAAAAAAAAAYwQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAQAAAAAAABcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGUEAAAAAAAAZgQAAAAAAAAAAAAAZgQAAAAAAABnBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQQAAAAAAABlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " declare_depend"
					},
					"DwAAAGcEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABpBAAAAAAAAAAAAABpBAAAAAAAAGoEAAAAAAAAAAAAAGoEAAAAAAAAawQAAAAAAAAAAAAAawQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAG0EAAAAAAAAAAAAAG0EAAAAAAAAbgQAAAAAAAAAAAAAbgQAAAAAAABvBAAAAAAAAAAAAABvBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAcQQAAAAAAAAAAAAAcQQAAAAAAAByBAAAAAAAAAAAAAByBAAAAAAAAHMEAAAAAAAAAAAAAHMEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB1BAAAAAAAAAAAAAB1BAAAAAAAAHYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwQAAAAAAABnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "ency"
					},
					"BAAAAHYEAAAAAAAAdwQAAAAAAAAAAAAAdwQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHkEAAAAAAAAAAAAAHkEAAAAAAAAegQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgQAAAAAAAB2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHoEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHsEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAAB9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewQAAAAAAAB7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "include_direcot"
					},
					"DwAAAH0EAAAAAAAAfgQAAAAAAAAAAAAAfgQAAAAAAAB/BAAAAAAAAAAAAAB/BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAgQQAAAAAAAAAAAAAgQQAAAAAAACCBAAAAAAAAAAAAACCBAAAAAAAAIMEAAAAAAAAAAAAAIMEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACFBAAAAAAAAAAAAACFBAAAAAAAAIYEAAAAAAAAAAAAAIYEAAAAAAAAhwQAAAAAAAAAAAAAhwQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIkEAAAAAAAAAAAAAIkEAAAAAAAAigQAAAAAAAAAAAAAigQAAAAAAACLBAAAAAAAAAAAAACLBAAAAAAAAIwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQQAAAAAAAB9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"left_delete",
					null,
					"AgAAAIsEAAAAAAAAiwQAAAAAAAABAAAAdIoEAAAAAAAAigQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "tories:"
					},
					"BwAAAIoEAAAAAAAAiwQAAAAAAAAAAAAAiwQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAI0EAAAAAAAAAAAAAI0EAAAAAAAAjgQAAAAAAAAAAAAAjgQAAAAAAACPBAAAAAAAAAAAAACPBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAkQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " printf_include"
					},
					"DwAAAJEEAAAAAAAAkgQAAAAAAAAAAAAAkgQAAAAAAACTBAAAAAAAAAAAAACTBAAAAAAAAJQEAAAAAAAAAAAAAJQEAAAAAAAAlQQAAAAAAAAAAAAAlQQAAAAAAACWBAAAAAAAAAAAAACWBAAAAAAAAJcEAAAAAAAAAAAAAJcEAAAAAAAAmAQAAAAAAAAAAAAAmAQAAAAAAACZBAAAAAAAAAAAAACZBAAAAAAAAJoEAAAAAAAAAAAAAJoEAAAAAAAAmwQAAAAAAAAAAAAAmwQAAAAAAACcBAAAAAAAAAAAAACcBAAAAAAAAJ0EAAAAAAAAAAAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQQAAAAAAACRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "s,"
					},
					"AgAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAQAAAAAAACgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\nsources:"
					},
					"CgAAAKIEAAAAAAAAowQAAAAAAAAAAAAAowQAAAAAAACkBAAAAAAAAAAAAACkBAAAAAAAAKUEAAAAAAAAAAAAAKUEAAAAAAAApgQAAAAAAAAAAAAApgQAAAAAAACnBAAAAAAAAAAAAACnBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAAqQQAAAAAAAAAAAAAqQQAAAAAAACqBAAAAAAAAAAAAACqBAAAAAAAAKsEAAAAAAAAAAAAAKsEAAAAAAAArAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogQAAAAAAACiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " printf_files"
					},
					"DQAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAACuBAAAAAAAAK8EAAAAAAAAAAAAAK8EAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAACxBAAAAAAAAAAAAACxBAAAAAAAALIEAAAAAAAAAAAAALIEAAAAAAAAswQAAAAAAAAAAAAAswQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALUEAAAAAAAAAAAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAuQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALkEAAAAAAAAugQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQQAAAAAAAC5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALoEAAAAAAAAuwQAAAAAAAAAAAAAuwQAAAAAAAC8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugQAAAAAAAC6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "compile_args:"
					},
					"DQAAALwEAAAAAAAAvQQAAAAAAAAAAAAAvQQAAAAAAAC+BAAAAAAAAAAAAAC+BAAAAAAAAL8EAAAAAAAAAAAAAL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADBBAAAAAAAAAAAAADBBAAAAAAAAMIEAAAAAAAAAAAAAMIEAAAAAAAAwwQAAAAAAAAAAAAAwwQAAAAAAADEBAAAAAAAAAAAAADEBAAAAAAAAMUEAAAAAAAAAAAAAMUEAAAAAAAAxgQAAAAAAAAAAAAAxgQAAAAAAADHBAAAAAAAAAAAAADHBAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAAAyQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAQAAAAAAAC8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkEAAAAAAAAygQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQQAAAAAAADJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMoEAAAAAAAAzAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygQAAAAAAADKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywQAAAAAAADLBAAAAAAAAP///////+9/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAM0EAAAAAAAAzgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAM4EAAAAAAAA0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgQAAAAAAADOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwQAAAAAAADPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "DPRINTF_ALIAS"
					},
					"DQAAANAEAAAAAAAA0QQAAAAAAAAAAAAA0QQAAAAAAADSBAAAAAAAAAAAAADSBAAAAAAAANMEAAAAAAAAAAAAANMEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADVBAAAAAAAAAAAAADVBAAAAAAAANYEAAAAAAAAAAAAANYEAAAAAAAA1wQAAAAAAAAAAAAA1wQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANkEAAAAAAAAAAAAANkEAAAAAAAA2gQAAAAAAAAAAAAA2gQAAAAAAADbBAAAAAAAAAAAAADbBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AQAAAAAAADQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "_STANDARD_FUNC"
					},
					"DgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAADfBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA4QQAAAAAAADiBAAAAAAAAAAAAADiBAAAAAAAAOMEAAAAAAAAAAAAAOMEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADlBAAAAAAAAAAAAADlBAAAAAAAAOYEAAAAAAAAAAAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA5wQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOkEAAAAAAAAAAAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QQAAAAAAADdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "TION_NAMES_HAR"
					},
					"DgAAAOsEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADtBAAAAAAAAAAAAADtBAAAAAAAAO4EAAAAAAAAAAAAAO4EAAAAAAAA7wQAAAAAAAAAAAAA7wQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPEEAAAAAAAAAAAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAD2BAAAAAAAAPcEAAAAAAAAAAAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAPkEAAAAAAAA+gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QQAAAAAAAD5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPsEAAAAAAAA/AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wQAAAAAAAD7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPwEAAAAAAAA/QQAAAAAAAAAAAAA/QQAAAAAAAD/BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAP8EAAAAAAAAAQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wQAAAAAAAD/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "-DPRINTF-"
					},
					"CQAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAMFAAAAAAAAAAAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAAgFAAAAAAAACAUAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAACQUAAAAAAAAJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "_INCLUDE_CONFIG"
					},
					"DwAAAAgFAAAAAAAACQUAAAAAAAAAAAAACQUAAAAAAAAKBQAAAAAAAAAAAAAKBQAAAAAAAAsFAAAAAAAAAAAAAAsFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA4FAAAAAAAAAAAAAA4FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABEFAAAAAAAAAAAAABEFAAAAAAAAEgUAAAAAAAAAAAAAEgUAAAAAAAATBQAAAAAAAAAAAAATBQAAAAAAABQFAAAAAAAAAAAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAUAAAAAAAAIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "_H=0"
					},
					"BAAAABcFAAAAAAAAGAUAAAAAAAAAAAAAGAUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABoFAAAAAAAAAAAAABoFAAAAAAAAGwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwUAAAAAAAAXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABwFAAAAAAAAHQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAUAAAAAAAAcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACAFAAAAAAAAIQUAAAAAAAAAAAAAIQUAAAAAAAAiBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAUAAAAAAAAgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAACEFAAAAAAAAIQUAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAIgUAAAAAAAAiBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libc-skeleton/subprojects/printf/meson.build",
			"settings":
			{
				"buffer_size": 1335,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFcEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwQAAAAAAABXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AQAAAFkEAAAAAAAAJgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQQAAAAAAABZBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libc-skeleton/meson.build",
			"settings":
			{
				"buffer_size": 3028,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAACQHAAAAAAAAJgcAAAAAAAAAAAAA5AYAAAAAAADmBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQcAAAAAAADkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALkHAAAAAAAAugcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAsIVA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "PRINTF_FILES_D"
					},
					"DgAAALoHAAAAAAAAuwcAAAAAAAAAAAAAuwcAAAAAAAC8BwAAAAAAAAAAAAC8BwAAAAAAAL0HAAAAAAAAAAAAAL0HAAAAAAAAvgcAAAAAAAAAAAAAvgcAAAAAAAC/BwAAAAAAAAAAAAC/BwAAAAAAAMAHAAAAAAAAAAAAAMAHAAAAAAAAwQcAAAAAAAAAAAAAwQcAAAAAAADCBwAAAAAAAAAAAADCBwAAAAAAAMMHAAAAAAAAAAAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAADFBwAAAAAAAMYHAAAAAAAAAAAAAMYHAAAAAAAAxwcAAAAAAAAAAAAAxwcAAAAAAADIBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "EP"
					},
					"AgAAAMgHAAAAAAAAyQcAAAAAAAAAAAAAyQcAAAAAAADKBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMoHAAAAAAAAywcAAAAAAAAAAAAAywcAAAAAAADMBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygcAAAAAAADKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMwHAAAAAAAAzQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAcAAAAAAADMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					18,
					"left_delete",
					null,
					"EgAAAMwHAAAAAAAAzAcAAAAAAAABAAAAIMsHAAAAAAAAywcAAAAAAAABAAAAPcoHAAAAAAAAygcAAAAAAAABAAAAIMkHAAAAAAAAyQcAAAAAAAABAAAAUMgHAAAAAAAAyAcAAAAAAAABAAAARccHAAAAAAAAxwcAAAAAAAABAAAARMYHAAAAAAAAxgcAAAAAAAABAAAAX8UHAAAAAAAAxQcAAAAAAAABAAAAU8QHAAAAAAAAxAcAAAAAAAABAAAARcMHAAAAAAAAwwcAAAAAAAABAAAATMIHAAAAAAAAwgcAAAAAAAABAAAAScEHAAAAAAAAwQcAAAAAAAABAAAARsAHAAAAAAAAwAcAAAAAAAABAAAAX78HAAAAAAAAvwcAAAAAAAABAAAARr4HAAAAAAAAvgcAAAAAAAABAAAAVL0HAAAAAAAAvQcAAAAAAAABAAAATrwHAAAAAAAAvAcAAAAAAAABAAAASbsHAAAAAAAAuwcAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAzQcAAAAAAADNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAALoHAAAAAAAAugcAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAALoHAAAAAAAAuwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAALsHAAAAAAAAvQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAALwHAAAAAAAAvQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAcAAAAAAAC8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAALwHAAAAAAAAvAcAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAvQcAAAAAAAC9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALsHAAAAAAAAuwcAAAAAAAABAAAAW7sHAAAAAAAAuwcAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAvAcAAAAAAAC8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAALoHAAAAAAAAugcAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "printf_files_"
					},
					"DQAAALoHAAAAAAAAuwcAAAAAAAAAAAAAuwcAAAAAAAC8BwAAAAAAAAAAAAC8BwAAAAAAAL0HAAAAAAAAAAAAAL0HAAAAAAAAvgcAAAAAAAAAAAAAvgcAAAAAAAC/BwAAAAAAAAAAAAC/BwAAAAAAAMAHAAAAAAAAAAAAAMAHAAAAAAAAwQcAAAAAAAAAAAAAwQcAAAAAAADCBwAAAAAAAAAAAADCBwAAAAAAAMMHAAAAAAAAAAAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAADFBwAAAAAAAMYHAAAAAAAAAAAAAMYHAAAAAAAAxwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "dep"
					},
					"AwAAAMcHAAAAAAAAyAcAAAAAAAAAAAAAyAcAAAAAAADJBwAAAAAAAAAAAADJBwAAAAAAAMoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMoHAAAAAAAAywcAAAAAAAAAAAAAywcAAAAAAADMBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygcAAAAAAADKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " printf_subprojec"
					},
					"EQAAAMwHAAAAAAAAzQcAAAAAAAAAAAAAzQcAAAAAAADOBwAAAAAAAAAAAADOBwAAAAAAAM8HAAAAAAAAAAAAAM8HAAAAAAAA0AcAAAAAAAAAAAAA0AcAAAAAAADRBwAAAAAAAAAAAADRBwAAAAAAANIHAAAAAAAAAAAAANIHAAAAAAAA0wcAAAAAAAAAAAAA0wcAAAAAAADUBwAAAAAAAAAAAADUBwAAAAAAANUHAAAAAAAAAAAAANUHAAAAAAAA1gcAAAAAAAAAAAAA1gcAAAAAAADXBwAAAAAAAAAAAADXBwAAAAAAANgHAAAAAAAAAAAAANgHAAAAAAAA2QcAAAAAAAAAAAAA2QcAAAAAAADaBwAAAAAAAAAAAADaBwAAAAAAANsHAAAAAAAAAAAAANsHAAAAAAAA3AcAAAAAAAAAAAAA3AcAAAAAAADdBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAcAAAAAAADMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "t.get_va"
					},
					"CAAAAN0HAAAAAAAA3gcAAAAAAAAAAAAA3gcAAAAAAADfBwAAAAAAAAAAAADfBwAAAAAAAOAHAAAAAAAAAAAAAOAHAAAAAAAA4QcAAAAAAAAAAAAA4QcAAAAAAADiBwAAAAAAAAAAAADiBwAAAAAAAOMHAAAAAAAAAAAAAOMHAAAAAAAA5AcAAAAAAAAAAAAA5AcAAAAAAADlBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QcAAAAAAADdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "riable"
					},
					"BgAAAOUHAAAAAAAA5gcAAAAAAAAAAAAA5gcAAAAAAADnBwAAAAAAAAAAAADnBwAAAAAAAOgHAAAAAAAAAAAAAOgHAAAAAAAA6QcAAAAAAAAAAAAA6QcAAAAAAADqBwAAAAAAAAAAAADqBwAAAAAAAOsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QcAAAAAAADlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOsHAAAAAAAA7QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wcAAAAAAADrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOwHAAAAAAAA7gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AcAAAAAAADsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "printf_files_de"
					},
					"DwAAAO0HAAAAAAAA7gcAAAAAAAAAAAAA7gcAAAAAAADvBwAAAAAAAAAAAADvBwAAAAAAAPAHAAAAAAAAAAAAAPAHAAAAAAAA8QcAAAAAAAAAAAAA8QcAAAAAAADyBwAAAAAAAAAAAADyBwAAAAAAAPMHAAAAAAAAAAAAAPMHAAAAAAAA9AcAAAAAAAAAAAAA9AcAAAAAAAD1BwAAAAAAAAAAAAD1BwAAAAAAAPYHAAAAAAAAAAAAAPYHAAAAAAAA9wcAAAAAAAAAAAAA9wcAAAAAAAD4BwAAAAAAAAAAAAD4BwAAAAAAAPkHAAAAAAAAAAAAAPkHAAAAAAAA+gcAAAAAAAAAAAAA+gcAAAAAAAD7BwAAAAAAAAAAAAD7BwAAAAAAAPwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QcAAAAAAADtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAPwHAAAAAAAA/QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AcAAAAAAAD8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					3,
					"left_delete",
					null,
					"AwAAANUEAAAAAAAA1QQAAAAAAAAUAAAAJy1ER0RUT0FfSE9TVF9ERUJVRyfUBAAAAAAAANQEAAAAAAAAAQAAACDTBAAAAAAAANMEAAAAAAAAAQAAACw",
					"AgAAAAAAAAABAAAA/wcAAAAAAAD/BwAAAAAAAAAAAAAAAPC/AQAAAAEAAADVBAAAAAAAAOkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKkEAAAAAAAAqgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6QcAAAAAAADpBwAAAAAAAAAAAAAAAPC/AQAAAAEAAACpBAAAAAAAAKkEAAAAAAAA////////738"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAKoEAAAAAAAAqwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6gcAAAAAAADqBwAAAAAAAAAAAAAAAPC/AQAAAAEAAACqBAAAAAAAAKoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAKsEAAAAAAAArAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6wcAAAAAAADrBwAAAAAAAAAAAAAAAPC/AQAAAAEAAACrBAAAAAAAAKsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "bug_options"
					},
					"CwAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAACuBAAAAAAAAK8EAAAAAAAAAAAAAK8EAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAACxBAAAAAAAAAAAAACxBAAAAAAAALIEAAAAAAAAAAAAALIEAAAAAAAAswQAAAAAAAAAAAAAswQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALUEAAAAAAAAAAAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7AcAAAAAAADsBwAAAAAAAAAAAAAAAPC/AQAAAAEAAACsBAAAAAAAAKwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALcEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC5BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9wcAAAAAAAD3BwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC3BAAAAAAAALcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkEAAAAAAAAugQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+QcAAAAAAAD5BwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC5BAAAAAAAALkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAALoEAAAAAAAAvAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+gcAAAAAAAD6BwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6BAAAAAAAALoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAALsEAAAAAAAAvAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/AcAAAAAAAD8BwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7BAAAAAAAALsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "DDEBUG"
					},
					"BgAAALwEAAAAAAAAvQQAAAAAAAAAAAAAvQQAAAAAAAC+BAAAAAAAAAAAAAC+BAAAAAAAAL8EAAAAAAAAAAAAAL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADBBAAAAAAAAAAAAADBBAAAAAAAAMIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/QcAAAAAAAD9BwAAAAAAAAAAAAAAAPC/AQAAAAEAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAMMEAAAAAAAAxAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAPC/AQAAAAEAAADDBAAAAAAAAMMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAALoEAAAAAAAAuwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABAgAAAAAAAAECAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6BAAAAAAAALoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAALoEAAAAAAAAugQAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC7BAAAAAAAALsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAALoEAAAAAAAAuwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABAgAAAAAAAAECAAAAAAAAAAAAAAAAPC/AQAAAAEAAAC6BAAAAAAAALoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "debug_options,"
					},
					"DwAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA5wQAAAAAAADnBAAAAAAAAAoAAAAnLURERUJVRycs5wQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOkEAAAAAAAAAAAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAADrBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAADxBAAAAAAAAPIEAAAAAAAAAAAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA8wQAAAAAAAD0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/AQAAAAEAAADwBAAAAAAAAOYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAABwFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAfBQAAAAAAAAAAAAAdBQAAAAAAAB0FAAAAAAAAAgAAAAkJHQUAAAAAAAAeBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACQgAAAAAAAAJCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAcBQAAAAAAABwFAAAAAAAA////////738"
				],
				[
					132,
					1,
					"paste",
					null,
					"AQAAAB4FAAAAAAAAagUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwgAAAAAAAALCAAAAAAAAAAAAAAAAPC/AQAAAAEAAAAeBQAAAAAAAB4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BgAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABmBQAAAAAAAAQAAAB0cnVlZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAGgFAAAAAAAAaQUAAAAAAAAAAAAAaQUAAAAAAABqBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVwgAAAAAAABXCAAAAAAAAAAAAAAAAPC/AQAAAAEAAABpBQAAAAAAAGUFAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "*asm:                                                                                                                                                                                                                                                                                          \n%{m16|m32:--32}  %{m16|m32|mx32:;:--64}  %{mx32:--x32}  %{msse2avx:%{!mavx:-msse2avx}}                                                                                                                                                                                                         \n                                                                                                                                                                                                                                                                                               \n*asm_debug:                                                                                                                                                                                                                                                                                    \n%{%:debug-level-gt(0):%{gstabs*:--gstabs;:%{g*:}}} %{fdebug-prefix-map=*:--debug-prefix-map %*}                                                                                                                                                                                                \n                                                                                                                                                                                                                                                                                               \n*asm_debug_option:                                                                                                                                                                                                                                                                             \n%{%:debug-level-gt(0):%{!gstabs*:%{g*:%{%:dwarf-version-gt(4):--gdwarf-5 ;%:dwarf-version-gt(3):--gdwarf-4 ;%:dwarf-version-gt(2):--gdwarf-3 ;:--gdwarf2 }}}}                                                                                                                                  \n                                                                                                                                                                                                                                                                                               \n*asm_final:                                                                                                                                                                                                                                                                                    \n%{gsplit-dwarf:                                                                                                                                                                                                                                                                                \n       objcopy --extract-dwo     %{c:%{o*:%*}%{!o*:%w%b%O}}%{!c:%U%O}    %b.dwo                                                                                                                                                                                                                \n       objcopy --strip-dwo       %{c:%{o*:%*}%{!o*:%w%b%O}}%{!c:%U%O}     }                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                               \n*asm_options:                                                                                                                                                                                                                                                                                  \n%{-target-help:%:print-asm-header()} %{v} %{w:-W} %{I*} %(asm_debug_option) %{gz|gz=zlib:--compress-debug-sections=zlib} %{gz=none:--compress-debug-sections=none} %{gz=zlib-gnu:--compress-debug-sections=zlib-gnu} %a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}                        \n                                                                                                                                                                                                                                                                                               \n*invoke_as:                                                                                                                                                                                                                                                                                    \n%{!fwpa*:   %{fcompare-debug=*|fdump-final-insns=*:%:compare-debug-dump-opt()}   %{!S:-o %|.s |                                                                                                                                                                                                \n as %(asm_options) %m.s %A }  }                                                                                                                                                                                                                                                                \n                                                                                                                                                                                                                                                                                               \n*cpp:                                                                                                                                                                                                                                                                                          \n%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*cpp_options:                                                                                                                                                                                                                                                                                  \n%(cpp_unique_options) %1 %{m*} %{std*&ansi&trigraphs} %{W*&pedantic*} %{w} %{f*} %{g*:%{%:debug-level-gt(0):%{g*} %{!fno-working-directory:-fworking-directory}}} %{O*} %{undef} %{save-temps*:-fpch-preprocess} %(distro_defaults)                                                            \n                                                                                                                                                                                                                                                                                               \n*cpp_debug_options:                                                                                                                                                                                                                                                                            \n%<dumpdir %<dumpbase %<dumpbase-ext %{d*} %:dumps()                                                                                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                               \n*cpp_unique_options:                                                                                                                                                                                                                                                                           \n%{!Q:-quiet} %{nostdinc*} %{C} %{CC} %{v} %@{I*&F*} %{P} %I %{MD:-MD %{!o:%b.d}%{o*:%.d%*}} %{MMD:-MMD %{!o:%b.d}%{o*:%.d%*}} %{M} %{MM} %{MF*} %{MG} %{MP} %{MQ*} %{MT*} %{Mmodules} %{Mno-modules} %{!E:%{!M:%{!MM:%{!MT:%{!MQ:%{MD|MMD:%{o*:-MQ %*}}}}}}} %{remap} %{%:debug-level-gt(2):-dD} %{!iplugindir*:%{fplugin*:%:find-plugindir()}} %{H} %C %{D*&U*&A*} %{i*} %Z %i %{E|M|MM:%W{o*}}                                                                                                                                                                                              \n                                                                                                                                                                                                                                                                                               \n*trad_capable_cpp:                                                                                                                                                                                                                                                                             \ncc1 -E %{traditional|traditional-cpp:-traditional-cpp}                                                                                                                                                                                                                                         \n                                                                                                                                                                                                                                                                                               \n*cc1:                                                                                                                                                                                                                                                                                          \n%{!mandroid|tno-android-cc:%(cc1_cpu) %{profile:-p};:%(cc1_cpu) %{profile:-p} %{!mglibc:%{!muclibc:%{!mbionic: -mbionic}}} %{!fno-pic:%{!fno-PIC:%{!fpic:%{!fPIC: -fPIC}}}}}                                                                                                                   \n                                                                                                                                                                                                                                                                                               \n*cc1_options:                                                                                                                                                                                                                                                                                  \n%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}} %{!iplugindir*:%{fplugin*:%:find-plugindir()}} %1 %{!Q:-quiet} %(cpp_debug_options) %{m*} %{aux-info*} %{g*} %{O*} %{W*&pedantic*} %{w} %{std*&ansi&trigraphs} %{v:-version} %{pg:-p} %{p} %{f*} %{undef} %{Qn:-fno-ident} %{Qy:} %{-help:--help} %{-target-help:--target-help} %{-version:--version} %{-help=*:--help=%*} %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %w%b.s}}} %{fsyntax-only:-o %j} %{-param*} %{coverage:-fprofile-arcs -ftest-coverage} %{fprofile-arcs|fprofile-generate*|coverage:   %{!fprofile-update=single:     %{pthread:-fprofile-update=prefer-atomic}}}                                                                                                                                                                                                                                   \n                                                                                                                                                                                                                                                                                               \n*cc1plus:                                                                                                                                                                                                                                                                                      \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*link_gcc_c_sequence:                                                                                                                                                                                                                                                                          \n%{static|static-pie:--start-group} %G %{!nolibc:%L}    %{static|static-pie:--end-group}%{!static:%{!static-pie:%G}}                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                               \n*distro_defaults:                                                                                                                                                                                                                                                                              \n%{!fno-asynchronous-unwind-tables:-fasynchronous-unwind-tables} %{!fno-stack-protector:%{!fstack-protector-all:%{!ffreestanding:%{!nostdlib:%{!fstack-protector:-fstack-protector-strong}}}}} %{!Wformat:%{!Wformat=2:%{!Wformat=0:%{!Wall:-Wformat} %{!Wno-format-security:-Wformat-security}}}} %{!fno-stack-clash-protection:-fstack-clash-protection} %{!m16:%{!m32:%{!fcf-protection*:%{!fno-cf-protection:-fcf-protection}}}}                                                                                                                                                           \n                                                                                                                                                                                                                                                                                               \n*link_ssp:                                                                                                                                                                                                                                                                                     \n%{fstack-protector|fstack-protector-all|fstack-protector-strong|fstack-protector-explicit:}                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                               \n*endfile:                                                                                                                                                                                                                                                                                      \n%{!mandroid|tno-android-ld:%{mdaz-ftz:crtfastmath.o%s;Ofast|ffast-math|funsafe-math-optimizations:%{!mno-daz-ftz:crtfastmath.o%s}}    %{mpc32:crtprec32.o%s}    %{mpc64:crtprec64.o%s}    %{mpc80:crtprec80.o%s} %{!static:%{fvtable-verify=none:%s;      fvtable-verify=preinit:vtv_end_preinit.o%s;      fvtable-verify=std:vtv_end.o%s}}    %{static:crtend.o%s;      shared|static-pie|!no-pie:crtendS.o%s;      :crtend.o%s} crtn.o%s %{fopenacc|fopenmp:crtoffloadend%O%s};:%{mdaz-ftz:crtfastmath.o%s;Ofast|ffast-math|funsafe-math-optimizations:%{!mno-daz-ftz:crtfastmath.o%s}}    %{mpc32:crtprec32.o%s}    %{mpc64:crtprec64.o%s}    %{mpc80:crtprec80.o%s} %{shared: crtend_so%O%s;: crtend_android%O%s}}                                                                                                                                                                       \n                                                                                                                                                                                                                                                                                               \n*link:                                                                                                                                                                                                                                                                                         \n%{!r:--build-id} %{!static|static-pie:--eh-frame-hdr} %{!mandroid|tno-android-ld:%{m16|m32|mx32:;:-m elf_x86_64}                    %{m16|m32:-m elf_i386}                    %{mx32:-m elf32_x86_64}   --hash-style=gnu   %{!fsanitize=*:--as-needed}   %{shared:-shared}   %{!shared:     %{!static:       %{!static-pie:    %{rdynamic:-export-dynamic}     %{m16|m32:-dynamic-linker %{muclibc:/lib/ld-uClibc.so.0;:%{mbionic:/system/bin/linker;:%{mmusl:/lib/ld-musl-i386.so.1;:/lib/ld-linux.so.2}}}}   %{m16|m32|mx32:;:-dynamic-linker %{muclibc:/lib/ld64-uClibc.so.0;:%{mbionic:/system/bin/linker64;:%{mmusl:/lib/ld-musl-x86_64.so.1;:/lib64/ld-linux-x86-64.so.2}}}}    %{mx32:-dynamic-linker %{muclibc:/lib/ldx32-uClibc.so.0;:%{mbionic:/system/bin/linkerx32;:%{mmusl:/lib/ld-musl-x32.so.1;:/libx32/ld-linux-x32.so.2}}}}}}     %{static:-static} %{static-pie:-static -pie --no-dynamic-linker -z text}};:%{m16|m32|mx32:;:-m elf_x86_64}                    %{m16|m32:-m elf_i386}                    %{mx32:-m elf32_x86_64}   --hash-style=gnu   %{!fsanitize=*:--as-needed}   %{shared:-shared}   %{!shared:     %{!static:       %{!static-pie:     %{rdynamic:-export-dynamic}    %{m16|m32:-dynamic-linker %{muclibc:/lib/ld-uClibc.so.0;:%{mbionic:/system/bin/linker;:%{mmusl:/lib/ld-musl-i386.so.1;:/lib/ld-linux.so.2}}}}   %{m16|m32|mx32:;:-dynamic-linker %{muclibc:/lib/ld64-uClibc.so.0;:%{mbionic:/system/bin/linker64;:%{mmusl:/lib/ld-musl-x86_64.so.1;:/lib64/ld-linux-x86-64.so.2}}}}    %{mx32:-dynamic-linker %{muclibc:/lib/ldx32-uClibc.so.0;:%{mbionic:/system/bin/linkerx32;:%{mmusl:/lib/ld-musl-x32.so.1;:/libx32/ld-linux-x32.so.2}}}}}}     %{static:-static} %{static-pie:-static -pie --no-dynamic-linker -z text}} %{shared: -Bsymbolic}}                                                                                                                                                                                                                                                                                         \n                                                                                                                                                                                                                                                                                               \n*lib:                                                                                                                                                                                                                                                                                          \n%{!mandroid|tno-android-ld:%{pthread:-lpthread} %{shared:-lc}    %{!shared:%{profile:-lc_p}%{!profile:-lc}};:%{shared:-lc}    %{!shared:%{profile:-lc_p}%{!profile:-lc}} %{!static: -ldl}}                                                                                                     \n                                                                                                                                                                                                                                                                                               \n*link_gomp:                                                                                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*libgcc:                                                                                                                                                                                                                                                                                       \n%{static|static-libgcc|static-pie:-lgcc -lgcc_eh}%{!static:%{!static-libgcc:%{!static-pie:%{!shared-libgcc:-lgcc --push-state --as-needed -lgcc_s --pop-state}%{shared-libgcc:-lgcc_s%{!shared: -lgcc}}}}}                                                                                     \n                                                                                                                                                                                                                                                                                               \n*startfile:                                                                                                                                                                                                                                                                                    \n%{!mandroid|tno-android-ld:%{shared:;      pg|p|profile:%{static-pie:grcrt1.o%s;:gcrt1.o%s};      static:crt1.o%s;      static-pie:rcrt1.o%s;      !no-pie:Scrt1.o%s;      :crt1.o%s} crti.o%s    %{static:crtbeginT.o%s;      shared|static-pie|!no-pie:crtbeginS.o%s;      :crtbegin.o%s}    \n%{fvtable-verify=none:%s;      fvtable-verify=preinit:vtv_start_preinit.o%s;      fvtable-verify=std:vtv_start.o%s} %{fopenacc|fopenmp:crtoffloadbegin%O%s};:%{shared: crtbegin_so%O%s;:  %{static: crtbegin_static%O%s;: crtbegin_dynamic%O%s}}}                                              \n                                                                                                                                                                                                                                                                                               \n*cross_compile:                                                                                                                                                                                                                                                                                \n0                                                                                                                                                                                                                                                                                              \n                                                                                                                                                                                                                                                                                               \n*version:                                                                                                                                                                                                                                                                                      \n11.4.0                                                                                                                                                                                                                                                                                         \n                                                                                                                                                                                                                                                                                               \n*multilib:                                                                                                                                                                                                                                                                                     \n. !m32 !m64 !mx32;32:../lib32:i386-linux-gnu m32 !m64 !mx32;64:../lib:x86_64-linux-gnu !m32 m64 !mx32;x32:../libx32:x86_64-linux-gnux32 !m32 !m64 mx32;                                                                                                                                        \n                                                                                                                                                                                                                                                                                               \n*multilib_defaults:                                                                                                                                                                                                                                                                            \nm64                                                                                                                                                                                                                                                                                            \n                                                                                                                                                                                                                                                                                               \n*multilib_extra:                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*multilib_matches:                                                                                                                                                                                                                                                                             \nm32 m32;m64 m64;mx32 mx32;                                                                                                                                                                                                                                                                     \n                                                                                                                                                                                                                                                                                               \n*multilib_exclusions:                                                                                                                                                                                                                                                                          \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*multilib_options:                                                                                                                                                                                                                                                                             \nm32/m64/mx32                                                                                                                                                                                                                                                                                   \n                                                                                                                                                                                                                                                                                               \n*multilib_reuse:                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*linker:                                                                                                                                                                                                                                                                                       \ncollect2                                                                                                                                                                                                                                                                                       \n                                                                                                                                                                                                                                                                                               \n*linker_plugin_file:                                                                                                                                                                                                                                                                           \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*lto_wrapper:                                                                                                                                                                                                                                                                                  \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*lto_gcc:                                                                                                                                                                                                                                                                                      \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*post_link:                                                                                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*link_libgcc:                                                                                                                                                                                                                                                                                  \n%D                                                                                                                                                                                                                                                                                             \n                                                                                                                                                                                                                                                                                               \n*md_exec_prefix:                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*md_startfile_prefix:                                                                                                                                                                                                                                                                          \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*md_startfile_prefix_1:                                                                                                                                                                                                                                                                        \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*startfile_prefix_spec:                                                                                                                                                                                                                                                                        \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*sysroot_spec:                                                                                                                                                                                                                                                                                 \n--sysroot=%R                                                                                                                                                                                                                                                                                   \n                                                                                                                                                                                                                                                                                               \n*sysroot_suffix_spec:                                                                                                                                                                                                                                                                          \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*sysroot_hdrs_suffix_spec:                                                                                                                                                                                                                                                                     \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*self_spec:                                                                                                                                                                                                                                                                                    \n                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                               \n*cc1_cpu:                                                                                                                                                                                                                                                                                      \n%{march=native:%>march=native %:local_cpu_detect(arch %{!m32:64;:32})   %{!mtune=*:%>mtune=native %:local_cpu_detect(tune %{!m32:64;:32})}} %{mtune=native:%>mtune=native %:local_cpu_detect(tune %{!m32:64;:32})}                                                                             \n                                                                                                                                                                                                                                                                                               \n*link_command:                                                                                                                                                                                                                                                                                 \n%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:    %(linker) %{!fno-use-linker-plugin:%{!fno-lto:     -plugin %(linker_plugin_file)     -plugin-opt=%(lto_wrapper)     -plugin-opt=-fresolution=%u.res         %{flinker-output=*:-plugin-opt=-linker-output-known}     %{!nostdlib:%{!nodefaultlibs:%:pass-through-libs(%(link_gcc_c_sequence))}}     }}%{flto|flto=*:%<fcompare-debug*}     %{flto} %{fno-lto} %{flto=*} %l %{static|shared|r:;!no-pie:-pie -z now} %{fuse-ld=*:-fuse-ld=%*}  %{gz|gz=zlib:--compress-debug-sections=zlib} %{gz=none:--compress-debug-sections=none} %{gz=zlib-gnu:--compress-debug-sections=zlib-gnu}  -z relro %X %{o*} %{e*} %{N} %{n} %{r}    %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!r:%{!nostartfiles:%S}}}     %{static|no-pie|static-pie:} %@{L*} %(mfwrap) %(link_libgcc) %{fvtable-verify=none:} %{fvtable-verify=std:   %e-fvtable-verify=std is not supported in this configuration} %{fvtable-verify=preinit:   %e-fvtable-verify=preinit is not supported in this configuration} %{!nostdlib:%{!r:%{!nodefaultlibs:%{%:sanitize(address):%{!shared:libasan_preinit%O%s} %{static-libasan:%{!shared:-Bstatic --whole-archive -lasan --no-whole-archive -Bdynamic}}%{!static-libasan:--push-state --no-as-needed -lasan --pop-state}}     %{%:sanitize(hwaddress):%{static-libhwasan:%{!shared:-Bstatic --whole-archive -lhwasan --no-whole-archive -Bdynamic}}%{!static-libhwasan:--push-state --no-as-needed -lhwasan --pop-state}}     %{%:sanitize(thread):%{!shared:libtsan_preinit%O%s} %{static-libtsan:%{!shared:-Bstatic --whole-archive -ltsan --no-whole-archive -Bdynamic}}%{!static-libtsan:--push-state --no-as-needed -ltsan --pop-state}}     %{%:sanitize(leak):%{!shared:liblsan_preinit%O%s} %{static-liblsan:%{!shared:-Bstatic --whole-archive -llsan --no-whole-archive -Bdynamic}}%{!static-liblsan:--push-state --no-as-needed -llsan --pop-state}}}}} %o      %{fopenacc|fopenmp|%:gt(%{ftree-parallelize-loops=*:%*} 1):      %:include(libgomp.spec)%(link_gomp)}    %{fgnu-tm:%:include(libitm.spec)%(link_itm)}   \n %(mflib)  %{fsplit-stack: --wrap=pthread_create}    %{fprofile-arcs|fprofile-generate*|coverage:-lgcov} %{!nostdlib:%{!r:%{!nodefaultlibs:%{%:sanitize(address): %{static-libasan|static:%:include(libsanitizer.spec)%(link_libasan)}    %{static:%ecannot specify -static with -fsanitize=address}}    %{%:sanitize(hwaddress): %{static-libhwasan|static:%:include(libsanitizer.spec)%(link_libhwasan)}     %{static:%ecannot specify -static with -fsanitize=hwaddress}}    %{%:sanitize(thread): %{static-libtsan|static:%:include(libsanitizer.spec)%(link_libtsan)}    %{static:%ecannot specify -static with -fsanitize=thread}}    %{%:sanitize(undefined):%{static-libubsan:-Bstatic} %{!static-libubsan:--push-state --no-as-needed} -lubsan  %{static-libubsan:-Bdynamic} %{!static-libubsan:--pop-state} %{static-libubsan|static:%:include(libsanitizer.spec)%(link_libubsan)}}    %{%:sanitize(leak): %{static-liblsan|static:%:include(libsanitizer.spec)%(link_liblsan)}}}}}     %{!nostdlib:%{!r:%{!nodefaultlibs:%(link_ssp) %(link_gcc_c_sequence)}}}    %{!nostdlib:%{!r:%{!nostartfiles:%E}}} %{T*}                                                                   \n%(post_link) }}}}}}     ",
			"settings":
			{
				"buffer_size": 48675,
				"line_ending": "Windows",
				"name": "*asm:"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAI74AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "libc-skeleton/buildresults/build.ninja",
			"settings":
			{
				"buffer_size": 359175,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/cmake.sublime-build",
					""
				],
				[
					"Packages/User/cmake.sublime-build",
					"clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/cmake.sublime-build",
					""
				],
				[
					"Packages/User/cmake.sublime-build",
					"clean"
				],
				[
					"Packages/User/cmake.sublime-build",
					"new sublime build"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/cmake.sublime-build",
					""
				],
				[
					"Packages/User/cmake.sublime-build",
					"clean"
				]
			],
			[
				"Packages/User/cmake.sublime-build",
				""
			]
		],
		[
			[
				[
					"testNucleo - all",
					""
				],
				[
					"testNucleo - clean",
					""
				],
				[
					"testNucleo - edit_cache",
					""
				],
				[
					"testNucleo - rebuild_cache",
					""
				],
				[
					"testNucleo - testNucleo",
					""
				],
				[
					"testNucleo - testNucleo.bin",
					""
				],
				[
					"testNucleo - testNucleo.hex",
					""
				],
				[
					"testNucleo - testNucleo/fast",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/cmake.sublime-build",
					""
				],
				[
					"Packages/User/cmake.sublime-build",
					"clean"
				]
			],
			[
				"testNucleo - all",
				""
			]
		],
		[
			[
				[
					"testNucleo - all",
					""
				],
				[
					"testNucleo - clean",
					""
				],
				[
					"testNucleo - edit_cache",
					""
				],
				[
					"testNucleo - rebuild_cache",
					""
				],
				[
					"testNucleo - testNucleo",
					""
				],
				[
					"testNucleo - testNucleo.bin",
					""
				],
				[
					"testNucleo - testNucleo.hex",
					""
				],
				[
					"testNucleo - testNucleo/fast",
					""
				],
				[
					"Packages/User/cmake.sublime-build",
					""
				],
				[
					"Packages/User/cmake.sublime-build",
					"clean"
				]
			],
			[
				"testNucleo - all",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"projectedit",
				"Project: Edit Project"
			],
			[
				"project",
				"Project: Edit Project"
			],
			[
				"lsp settings",
				"Preferences: LSP-clangd Settings"
			],
			[
				"open panel",
				"Meson: Toggle Panel"
			],
			[
				"terminus",
				"Terminus: List Shells"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pya",
				"PyYapf: Format Selection"
			],
			[
				"debugger open",
				"Debugger: Open"
			],
			[
				"open debu",
				"Debugger: Open"
			],
			[
				"debugger configurat",
				"Debugger: Add or Select Configuration"
			],
			[
				"debugger settin",
				"Preferences: Debugger Settings"
			],
			[
				"build ",
				"Build With: Python"
			],
			[
				"debugger ",
				"Debugger: Open"
			],
			[
				"debug",
				"Debugger: Add or Select Configuration"
			],
			[
				"debugger setting",
				"Preferences: Debugger Settings"
			],
			[
				"debugger",
				"Debugger: Install Adapters"
			],
			[
				"doxyge",
				"DoxyDoxygen: Build Documentation"
			],
			[
				"todo",
				"TodoReview: Project and Open Files"
			],
			[
				"doxygen",
				"DoxyDoxygen: Build Documentation"
			],
			[
				"lsp form",
				"LSP: Format Selection"
			],
			[
				"lsp format",
				"LSP: Format Selection"
			],
			[
				"format",
				"LSP: Format Selection"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp trou",
				"LSP: Troubleshoot Server"
			],
			[
				"clangd",
				"Preferences: LSP-clangd Settings"
			],
			[
				"lsp troub",
				"LSP: Troubleshoot Server"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"package control ",
				"Package Control: Satisfy Dependencies"
			],
			[
				"package control upd",
				"Package Control: Upgrade Package"
			],
			[
				"clangd ",
				"Preferences: LSP-clangd Settings"
			],
			[
				"lsp server",
				"LSP: Troubleshoot Server"
			],
			[
				"lsp enable",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp ser",
				"LSP: Troubleshoot Server"
			],
			[
				"lsp rest",
				"LSP: Restart Server"
			],
			[
				"lsp forma",
				"LSP: Format Selection"
			],
			[
				"debugger com",
				"Debugger: Input Command"
			],
			[
				"debugger configu",
				"Debugger: Add or Select Configuration"
			],
			[
				"debugger confi",
				"Debugger: Add or Select Configuration"
			],
			[
				"debugger adapter",
				"Debugger: Install Adapters"
			],
			[
				"debugger adap",
				"Debugger: Install Adapters"
			],
			[
				"debugger adapt",
				"Debugger: Install Adapters"
			],
			[
				"debugger sett",
				"Preferences: Debugger Settings"
			],
			[
				"debugger add",
				"Debugger: Add Configuration"
			],
			[
				"doxy build",
				"DoxyDoxygen: Build Documentation"
			],
			[
				"doxy buil",
				"DoxyDoxygen: Build Documentation"
			],
			[
				"doxygen key",
				"Preferences: DoxyDoxygen Key Bindings"
			],
			[
				"doxy",
				"DoxyDoxygen: Select Comments (interactive)..."
			],
			[
				"do",
				"DoxyDoxygen: Comment All"
			],
			[
				"lsp format file",
				"LSP: Format File"
			],
			[
				"format file",
				"LSP: Format File"
			],
			[
				"for",
				"LSP: Format File"
			],
			[
				"inlay",
				"LSP: Toggle Inlay Hints"
			],
			[
				"lsp file",
				"LSP: Format File"
			],
			[
				"forma",
				"LSP: Format File"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"lsp re",
				"LSP: Restart Server"
			],
			[
				"lsp res",
				"LSP: Restart Server"
			],
			[
				"lsp restar",
				"LSP: Restart Server"
			],
			[
				"clangd sett",
				"Preferences: LSP-clangd Settings"
			],
			[
				"lsp serv",
				"LSP: Troubleshoot Server"
			],
			[
				"lsp setting",
				"Preferences: LSP Settings"
			],
			[
				"lsp restart",
				"LSP: Restart Server"
			],
			[
				"lsp dia",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"lsp log",
				"LSP: Toggle Log Panel"
			],
			[
				"restart",
				"LSP: Restart Server"
			],
			[
				"lsp settin",
				"Preferences: LSP Settings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"lsp key",
				"Preferences: LSP Key Bindings"
			],
			[
				"origami reorde",
				"Preferences: Origami Key Bindings"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"preference set",
				"Preferences: Settings"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"preferen",
				"Preferences: LSP Settings"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"dia",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"refere",
				"LSP: Find References"
			],
			[
				"re",
				"LSP: Restart Server"
			],
			[
				"referen",
				"LSP: Find References"
			],
			[
				"reference",
				"LSP: Find References"
			],
			[
				"rest",
				"LSP: Restart Server"
			],
			[
				"lsp rese",
				"LSP: Restart Server"
			],
			[
				"clang form",
				"Clang Format: Format Selection"
			],
			[
				"lsp setti",
				"Preferences: LSP Settings"
			],
			[
				"restar",
				"LSP: Restart Server"
			],
			[
				"index",
				"Help: Indexing Status"
			],
			[
				"diagn",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"lsp d",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"refer",
				"LSP: Find References"
			],
			[
				"lsp rename",
				"LSP: Rename"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"trouble",
				"LSP: Troubleshoot Server"
			],
			[
				"inde",
				"Help: Indexing Status"
			],
			[
				"log",
				"LSP: Toggle Log Panel"
			],
			[
				"lsp sett",
				"Preferences: LSP Settings"
			],
			[
				"lsp diagnostic",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"lsp goto symb",
				"LSP: Goto Symbol In Project…"
			],
			[
				"log panel",
				"LSP: Toggle Log Panel"
			],
			[
				"referenc",
				"LSP: Find References"
			],
			[
				"lsp pane",
				"LSP: Toggle Log Panel"
			],
			[
				"lsp find",
				"LSP: Find References"
			],
			[
				"package control up",
				"Package Control: Upgrade Package"
			],
			[
				"lsb trou",
				"LSP: Troubleshoot Server"
			],
			[
				"lsp:",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsb",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp diagn",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"lsp diag",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				"lsp ",
				"Preferences: LSP Key Bindings"
			],
			[
				"switchhea",
				"LSP-clangd: Switch to Source/Header"
			],
			[
				"select ",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"sele",
				"UI: Select Color Scheme"
			],
			[
				"color",
				"UI: Customize Color Scheme"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"debugger install",
				"Debugger: Install Adapters"
			],
			[
				"code lens",
				"LSP: Run Code Lens"
			],
			[
				"switch",
				"LSP-clangd: Switch to Source/Header"
			],
			[
				"file rename",
				"File: Rename"
			],
			[
				"rename ",
				"LSP: Rename"
			],
			[
				"lsp renam",
				"LSP: Rename"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"scope",
				"Selection: Expand to Scope"
			],
			[
				"type",
				"LSP: Show Type Hierarchy"
			],
			[
				"",
				"LSP: Toggle Log Panel"
			],
			[
				"clang",
				"Preferences: LSP Language ID Mapping Overrides"
			],
			[
				"ls",
				"LSP: Restart Server"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"gitgutter",
				"Preferences: GitGutter Settings"
			],
			[
				"blame",
				"Git: Blame"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 172.0,
		"history":
		[
			"bash",
			"quit",
			"quit()",
			"exit()",
			"exit",
			"pip install compiledb",
			"py -m ensurepip --upgrade",
			"pip",
			"python -m ensurepip --upgrade",
			"ensurepip",
			"pip",
			"sublime.log_indexing",
			"docker build -t nirve/armenv:v1"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/code/EA/meson_build",
		"/C/code/EA/meson_build/libc-skeleton",
		"/C/code/EA/meson_build/libc-skeleton/build",
		"/C/code/EA/meson_build/libc-skeleton/buildresults",
		"/C/code/EA/meson_build/libc-skeleton/subprojects"
	],
	"file_history":
	[
		"/C/code/EA/meson_build/libc-skeleton/buildresults/compile_commands.json",
		"/C/code/EA/meson_build/reference/005-cross-compilation/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/src/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/src/stdio/putchar_native.c",
		"/C/code/EA/meson_build/libc-skeleton/src/stdio/putchar.c",
		"/C/code/EA/meson_build/libc-skeleton/test/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/build/cross/armclang.txt",
		"/C/code/EA/meson_build/libc-skeleton/build/cross/armcc.txt",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/printf/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/include/stdio.h",
		"/C/code/EA/meson_build/meson_build.sublime-project",
		"/C/code/EA/meson_build/libc-skeleton/test/string/memcmp.c",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/printf/test/test_suite.cpp",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/printf/src/printf/printf.h",
		"/C/code/EA/meson_build/.gitignore",
		"/C/code/EA/meson_build/libc-skeleton/meson.build",
		"/C/code/EA/meson_build/reference/005-cross-compilation/subprojects/printf/printf.h",
		"/C/code/EA/meson_build/reference/005-cross-compilation/subprojects/printf.wrap",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/packagefiles/printf/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/printf/src/printf/printf.c",
		"/C/code/EA/meson_build/libc-skeleton/src/stdio/asprintf.c",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/openlibm/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/packagefiles/openlibm/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/packagefiles/printf/test/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/include/string.h",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka-1.1.7/src/cmocka.c",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/printf/test/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka-1.1.7/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/src/string/strdup.c",
		"/C/Users/Marc/Desktop/cmocka-1.1.7/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka.wrap",
		"/C/Users/Marc/Desktop/meson.build",
		"/C/code/EA/meson_build/reference/005-cross-compilation/subprojects/printf/printf.c",
		"/C/code/EA/meson_build/reference/005-cross-compilation/subprojects/cmocka-1.1.5/src/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/meson_options.txt",
		"/C/Users/Marc/AppData/Local/Temp/7zE846BE53E/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/src/string/memcmp.c",
		"/C/Users/Marc/AppData/Local/Temp/7zE0CAB4BAF/meson.build",
		"/C/Users/Marc/AppData/Local/Temp/7zE4ABA2A47/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka-1.1.7/tests/meson.build",
		"/C/Users/Marc/AppData/Local/Temp/MicrosoftEdgeDownloads/ffac27c3-cfd1-4abc-91fc-db8576c7c666/cmocka.wrap",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka-1.1.5/meson.build",
		"/C/code/EA/meson_build/reference/005-cross-compilation/subprojects/cmocka.wrap",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka-1.1.5/src/meson.build",
		"/C/code/EA/meson_build/reference/004-options-and-flags/src/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/build/cross/nrf52840.txt",
		"/C/code/EA/meson_build/reference/003-run-targets/subprojects/packagefiles/printf/test/meson.build",
		"/C/code/EA/meson_build/reference/003-run-targets/subprojects/packagefiles/printf/meson.build",
		"/C/code/EA/meson_build/reference/005-cross-compilation/subprojects/packagefiles/printf/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/buildresults/meson-logs/meson-log.txt",
		"/C/code/EA/meson_build/libc-skeleton/tools/clear_test_results.sh",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/printf.wrap",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/openlibm.wrap",
		"/C/code/EA/meson_build/reference/001-printf-dep/subprojects/printf.wrap",
		"/C/Users/Marc/AppData/Local/Temp/MicrosoftEdgeDownloads/8cb9f270-2f9a-475f-9230-5d363813cd40/unity.wrap",
		"/C/code/EA/meson_build/libc-skeleton/tools/libc_tests_xml.sh",
		"/C/code/EA/meson_build/reference/001-printf-dep/meson.build",
		"/C/code/EA/meson_build/libc-skeleton/subprojects/cmocka-1.1.5/cmocka.pc.cmake",
		"/C/code/distributor-gui/legacyModbus.py",
		"/C/code/distributor-gui/modbusBase.py",
		"/C/code/distributor-gui/HoldingRegisters.py",
		"/C/code/distributor-gui/Coils.py",
		"/C/code/distributor-gui/fileLog.py",
		"/C/code/distributor-gui/gui.py",
		"/C/code/distributor-gui/modernModbus.py",
		"/C/code/distributor-gui/distributor-gui-project.sublime-project",
		"/C/code/distributor-gui/legacyCustomHandlers.py",
		"/C/code/distributor-gui/modbusHandler.py",
		"/C/Users/Marc/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json",
		"/C/code/distributor-gui/config.ini",
		"/C/code/EA/Cmake/libc-skeleton/cmake/toolchains/cross/cortex-m7_hardfloat.cmake",
		"/C/code/EA/Cmake/libc-skeleton/cmake/toolchains/cross/cortex-m4_hardfloat.cmake",
		"/C/code/EA/Cmake/libc-skeleton/cmake/toolchains/cross/cortex-m3_softfloat.cmake",
		"/C/code/EA/Cmake/libc-skeleton/BuildOptions.cmake",
		"/C/code/EA/Cmake/libc-skeleton/buildresults/_deps/printf-src/README.md",
		"/C/code/EA/CMake reference/006-cross-compilation/test/CMakeLists.txt",
		"/C/code/EA/Cmake/libc-skeleton/test/CMakelists.txt",
		"/C/code/EA/reference testing/CMakeLists.txt",
		"/C/code/EA/006-cross-compilation/src/CMakeLists.txt",
		"/C/code/EA/005-build-options/src/CMakeLists.txt",
		"/C/code/Franger/src/Application/system.c",
		"/C/code/Franger/include/Drivers/interrupt.h",
		"/C/code/Franger/src/Device/Relay/relay_timer.c",
		"/C/code/Franger/include/Device/Relay/relay_timer.h",
		"/C/code/Franger/src/Application/self_test.c",
		"/C/code/Franger/include/Application/modbus/modbus.h",
		"/C/code/Franger/src/Drivers/interrupt.c",
		"/C/code/Franger/src/Device/runtime_flags.c",
		"/C/code/Franger/src/Device/TempHum/temphum.c",
		"/C/code/Franger/src/Application/tasks.c",
		"/C/code/Franger/src/main.c",
		"/C/code/Franger/src/Application/Signal/signal_avg.c",
		"/C/code/Franger/src/Application/serial.c",
		"/C/code/Franger/src/Application/inputs.c",
		"/C/code/Franger/src/Application/defrost.c",
		"/C/code/Franger/src/Application/Signal/signal_offset.c",
		"/C/code/Franger/src/Application/Signal/signal_dft.c",
		"/C/code/Franger/src/Application/modbus/mb_timers.c",
		"/C/code/Franger/src/Application/modbus/modbus.c",
		"/C/code/Franger/src/Application/Signal/signal_idx.c",
		"/C/code/Franger/src/Device/Proximity/proximity.c",
		"/C/code/Franger/src/Device/Proximity/proximity_i2c.c",
		"/C/code/Franger/src/Drivers/msp430_adc.c",
		"/C/code/Franger/include/Device/Proximity/proximity_i2c.h",
		"/C/code/Franger/src/Application/alarms.c",
		"/C/code/Franger/include/Misc.h",
		"/C/code/Franger/src/Application/faults.c",
		"/C/code/Franger/src/Application/records.c",
		"/C/code/Franger/include/Application/records.h",
		"/C/code/Franger/src/Device/mcu.c",
		"/C/code/Franger/include/Device/wdt.h",
		"/C/code/Franger/src/Device/wdt.c",
		"/C/code/Franger/src/Application/Signal/signal_uv.c",
		"/C/code/Franger/test/test_alarms.c",
		"/C/code/Franger/include/Application/system.h",
		"/C/code/Franger/include/Drivers/registers.h",
		"/C/code/Franger/src/Device/TempHum/temphumadc.c",
		"/C/code/Franger/src/Application/modbus/mb_holding_registers.c",
		"/C/code/Franger/src/Application/Mode/mode.c",
		"/C/code/Franger/src/Device/lamp.c",
		"/C/code/Franger/src/Device/Calendar/calendar_i2c.c",
		"/C/code/Franger/src/Device/TempHum/temphum_HTS221.c",
		"/C/code/Franger/src/Drivers/SPI_ADS1256.c",
		"/C/code/Franger/include/Device/mcu.h",
		"/C/code/Franger/test/support/msp430fr6989.h",
		"/C/code/Franger/buildtest/test/cache/signal_uv.h",
		"/C/code/Franger/src/Drivers/I2C.c",
		"/C/code/Franger/include/Application/faults.h"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 415.0,
		"where_history":
		[
			"C:\\code\\EA\\meson_build\\libc-skeleton\\",
			"C:\\code\\EA\\meson_build\\libc-skeleton\\*",
			"C:\\code\\EA\\meson_build\\libc-skeleton",
			"",
			"/libc-skeleton",
			"./libc-skeleton",
			"",
			"*.build",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"nolibc",
			"libc",
			"nolibc",
			" #Do not use the C library or system libraries tightly",
			"nolibc",
			"libc_native_link_flags",
			"[]",
			"DGDTOA_HOST_DEBUG",
			"\"src/gdtoa",
			"gdtoa",
			"gdtoa_includes",
			"libprintf",
			"ISO C99",
			"ISO C99 requires whitespace after the macro name",
			"PRINTF_VISIBILITY",
			"putchar",
			"PRINTF_H_",
			"_PRINTF_H_",
			"stdarg",
			"libc_native_files",
			"putchar",
			"putchar_native",
			"putchar",
			"libc_compile_flags",
			"libc_includes",
			"printf",
			"libc_native_files",
			"fno-builtin",
			"printf.h",
			"subprojects/printf/src/printf",
			"src",
			"printf/src/printf",
			"putchar_native",
			"native",
			"libc_native.a.p/stdio_putchar",
			"PRINTF_INCLUDE_CONFIG_H",
			"DPRINTF_INCLUDE_CONFIG_H",
			"#define",
			"putchar",
			"printf",
			"define",
			"#define",
			"libc_native.a.p/stdio_putchar",
			"stdio_putchar",
			"-I",
			"_putchar",
			"printf",
			"putchar",
			"_putchar",
			"libc_includes",
			"string",
			"putchar",
			"cmocka.c",
			"abs_exp10_covered_by_powers_table",
			"abs",
			"cmocka.c",
			"_POSIX_C_SOURCE ",
			"_SVID_SOURCE",
			"nostdinc",
			"cmocka.c",
			"nostdinc",
			"threads_dep",
			"abs_exp10_covered_by_powers_table",
			"inc_include",
			"libc_sys_include",
			"libc_sys_includes",
			"libc_includes",
			"gdtoa",
			"build_machine_arch_specific_includes",
			"libgdtoa",
			"libc_includes",
			"declare_dependency",
			"include_direcotires",
			"declare_dependency",
			"is_system",
			"inc_include",
			"PRINTF_ALIAS_STANDARD_FUNCTION_NAMES_HARD",
			"stdio_putchar",
			"putchar",
			"GDTOA_HOST_DEBUG",
			"DGDTOA_HOST_DEBUG",
			"stdio/putchar",
			"asprintf",
			"#define _GNU_SOURCE",
			"unused_parameter",
			"string_files",
			"strdup",
			"strdup\n",
			"strdup",
			"strdup()",
			"#define _POSIX_C_SOURCE 200809L",
			"#define _SVID_SOURCE",
			"libc_native_files",
			"libc_standalone_files",
			"libc_native_files",
			"putchar",
			"strdup",
			"cmocka_native",
			"assert(",
			"Wunused-parameter",
			"cmocka",
			"Wunused-parameter",
			"host",
			"c_compiler",
			"add_project_arguments",
			"add_project_arguments ",
			"arch_specific_includes",
			"libcmocka =",
			"native: true",
			"libcmocka",
			"cmocka_dep",
			"cc_native_dict",
			"project(",
			"project",
			"cmocka_dep",
			"cmocka_",
			"cmocka",
			"native",
			"cmocka",
			"libc_native_files",
			"_putchar",
			"libcmocka_native",
			"Wno-unknown-pragmas",
			"libc_common_files",
			"-wno-unknown",
			"assert.c",
			"libcmocka_native",
			"O2"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "libc-skeleton/src/meson.build",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7601,
						"regions":
						{
						},
						"selection":
						[
							[
								6186,
								6186
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/src/meson.build",
							"syntax": "Packages/Meson/meson.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4473.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "libc-skeleton/buildresults/compile_commands.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 393282,
						"regions":
						{
						},
						"selection":
						[
							[
								4083,
								4085
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"selector": "- comment - punctuation.separator - punctuation.definition.string.end - constant.character.escape - invalid.illegal - punctuation.section.mapping - punctuation.section.sequence",
									"server": "LSP-json"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4472,
										4473
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										3923,
										3924
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_active": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/buildresults/compile_commands.json",
							"show_definitions": false,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "libc-skeleton/subprojects/packagefiles/printf/meson.build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1331,
						"regions":
						{
						},
						"selection":
						[
							[
								1314,
								1109
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1313,
										1314
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1146,
										1147
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/subprojects/packagefiles/printf/meson.build",
							"syntax": "Packages/Meson/meson.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 546.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libc-skeleton/subprojects/printf/meson.build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1335,
						"regions":
						{
						},
						"selection":
						[
							[
								1318,
								1318
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1317,
										1318
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1150,
										1151
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/subprojects/printf/meson.build",
							"syntax": "Packages/Meson/meson.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 546.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "libc-skeleton/meson.build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3028,
						"regions":
						{
						},
						"selection":
						[
							[
								2136,
								2136
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2046,
										2047
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2027,
										2028
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/meson.build",
							"syntax": "Packages/Meson/meson.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 4,
					"file": "libc-skeleton/meson.build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3028,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1193
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/meson.build",
							"syntax": "Packages/Meson/meson.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48675,
						"regions":
						{
						},
						"selection":
						[
							[
								13822,
								13841
							]
						],
						"settings":
						{
							"auto_name": "*asm:",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "C:\\code\\EA\\meson_build\\libc-skeleton",
							"git_gutter_is_enabled": false,
							"lsp_uri": "buffer:179",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1280.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "libc-skeleton/buildresults/build.ninja",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 359175,
						"regions":
						{
						},
						"selection":
						[
							[
								593,
								595
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///C:/code/EA/meson_build/libc-skeleton/buildresults/build.ninja",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 17419.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 141.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 532.0
	},
	"output.Debugger Console":
	{
		"height": 264.0
	},
	"output.Debugger Protocol":
	{
		"height": 264.0
	},
	"output.Debugger Terminal":
	{
		"height": 264.0
	},
	"output.LSP Log Panel":
	{
		"height": 603.0
	},
	"output.Meson":
	{
		"height": 114.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 156.0
	},
	"output.Terminus":
	{
		"height": 273.0
	},
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 156.0
	},
	"output.find_results":
	{
		"height": 212.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"output.references":
	{
		"height": 138.0
	},
	"output.rename":
	{
		"height": 114.0
	},
	"pinned_build_system": "",
	"project": "meson_build.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"src/meson.build",
				"libc-skeleton\\src\\meson.build"
			],
			[
				"gitign",
				".gitignore"
			],
			[
				"printf.h",
				"libc-skeleton\\subprojects\\printf\\src\\printf\\printf.h"
			],
			[
				"stdio",
				"libc-skeleton\\include\\stdio.h"
			],
			[
				"stdio.h",
				"libc-skeleton\\include\\stdio.h"
			],
			[
				"native",
				"libc-skeleton\\src\\stdio\\putchar_native.c"
			],
			[
				"putchar",
				"libc-skeleton\\src\\stdio\\putchar.c"
			],
			[
				"printf.c",
				"libc-skeleton\\subprojects\\printf\\src\\printf\\printf.c"
			],
			[
				"printf/meson.build",
				"libc-skeleton\\subprojects\\printf\\meson.build"
			],
			[
				"src/",
				"libc-skeleton\\src\\meson.build"
			],
			[
				"nat",
				"libc-skeleton\\src\\stdio\\putchar_native.c"
			],
			[
				"test/meson.build",
				"libc-skeleton\\test\\meson.build"
			],
			[
				"printf/test/meson.build",
				"libc-skeleton\\subprojects\\printf\\test\\meson.build"
			],
			[
				"memcmp",
				"libc-skeleton\\test\\string\\memcmp.c"
			],
			[
				"openlibm/meson.build",
				"libc-skeleton\\subprojects\\openlibm\\meson.build"
			],
			[
				"asprintf",
				"libc-skeleton\\src\\stdio\\asprintf.c"
			],
			[
				"string.h",
				"libc-skeleton\\include\\string.h"
			],
			[
				"cmocka.c",
				"libc-skeleton\\subprojects\\cmocka-1.1.7\\src\\cmocka.c"
			],
			[
				"stdio/putchar",
				"libc-skeleton\\src\\stdio\\putchar.c"
			],
			[
				"strdup.c",
				"libc-skeleton\\src\\string\\strdup.c"
			],
			[
				"tests/meson.build",
				"libc-skeleton\\subprojects\\cmocka-1.1.7\\tests\\meson.build"
			],
			[
				"test/meson",
				"libc-skeleton\\test\\meson.build"
			],
			[
				"mesonlog",
				"libc-skeleton\\buildresults\\meson-logs\\meson-log.txt"
			],
			[
				"meson-log.txt",
				"libc-skeleton\\buildresults\\meson-logs\\meson-log.txt"
			],
			[
				"nrf",
				"libc-skeleton\\build\\cross\\nrf52840.txt"
			],
			[
				"src/meson.buil",
				"libc-skeleton\\src\\meson.build"
			],
			[
				"printf.wrap",
				"reference\\001-printf-dep\\subprojects\\printf.wrap"
			],
			[
				"printf/test/meson",
				"libc-skeleton\\subprojects\\packagefiles\\printf\\test\\meson.build"
			],
			[
				"libc/test/meson",
				"libc-skeleton\\test\\meson.build"
			],
			[
				"log",
				"libc-skeleton\\buildresults\\meson-logs\\meson-log.txt"
			],
			[
				"transaction",
				"pymodbus\\transaction.py"
			],
			[
				"base",
				"pymodbus\\framer\\base.py"
			],
			[
				"rtu_framer",
				"pymodbus\\framer\\rtu_framer.py"
			],
			[
				"mod",
				"modbusBase.py"
			],
			[
				"gui",
				"gui.py"
			],
			[
				"modbus",
				"modbusBase.py"
			],
			[
				"modbusbase",
				"modbusBase.py"
			],
			[
				"modbu",
				"modbusHandler.py"
			],
			[
				"legacy",
				"legacyModbus.py"
			],
			[
				"coil",
				"Coils.py"
			],
			[
				"gui.py",
				"gui.py"
			],
			[
				"test/cmake",
				"test\\CMakelists.txt"
			],
			[
				"src/cmakelists",
				"src\\CMakelists.txt"
			],
			[
				"interrupt.h",
				"include\\Drivers\\interrupt.h"
			],
			[
				"system.c",
				"src\\Application\\system.c"
			],
			[
				"relay_timer.c",
				"src\\Device\\Relay\\relay_timer.c"
			],
			[
				"relay_timer.h",
				"include\\Device\\Relay\\relay_timer.h"
			],
			[
				"self_test.c",
				"src\\Application\\self_test.c"
			],
			[
				"mb_timers.c",
				"src\\Application\\modbus\\mb_timers.c"
			],
			[
				"main.c",
				"src\\main.c"
			],
			[
				"proximity_i2c.h",
				"include\\Device\\Proximity\\proximity_i2c.h"
			],
			[
				"proximity_i2c.c",
				"src\\Device\\Proximity\\proximity_i2c.c"
			],
			[
				"proximity.c",
				"src\\Device\\Proximity\\proximity.c"
			],
			[
				"msp430_adc.c",
				"src\\Drivers\\msp430_adc.c"
			],
			[
				"test_alarm",
				"test\\test_alarms.c"
			],
			[
				"inputs.c",
				"src\\Application\\inputs.c"
			],
			[
				"misc.h",
				"include\\Misc.h"
			],
			[
				"tasks.c",
				"src\\Application\\tasks.c"
			],
			[
				"records.c",
				"src\\Application\\records.c"
			],
			[
				"records.h",
				"include\\Application\\records.h"
			],
			[
				"signal_uv.h",
				"buildtest\\test\\cache\\signal_uv.h"
			],
			[
				"signal_uv.c",
				"src\\Application\\Signal\\signal_uv.c"
			],
			[
				"alarms.c",
				"src\\Application\\alarms.c"
			],
			[
				"mcu.c",
				"src\\Device\\mcu.c"
			],
			[
				"spi",
				"src\\Drivers\\SPI_ADS1256.c"
			],
			[
				"registers.h",
				"include\\Drivers\\registers.h"
			],
			[
				"main",
				"src\\main.c"
			],
			[
				"wdt.h",
				"include\\Device\\wdt.h"
			],
			[
				"wdt.c",
				"src\\Device\\wdt.c"
			],
			[
				"system.h",
				"include\\Application\\system.h"
			],
			[
				"interrupt.c",
				"src\\Drivers\\interrupt.c"
			],
			[
				"faults.c",
				"src\\Application\\faults.c"
			],
			[
				"mcu.h",
				"include\\Device\\mcu.h"
			],
			[
				"led.h",
				"include\\Device\\led.h"
			],
			[
				"tasks",
				"src\\Application\\tasks.c"
			],
			[
				"lamp.c",
				"src\\Device\\lamp.c"
			],
			[
				"lamp.h",
				"include\\Device\\lamp.h"
			],
			[
				"reg.h",
				"include\\Drivers\\registers.h"
			],
			[
				"runtime_flags.h",
				"include\\Device\\runtime_flags.h"
			],
			[
				"runtime_flags.c",
				"src\\Device\\runtime_flags.c"
			],
			[
				"adc.c",
				"src\\Device\\adc.c"
			],
			[
				"timer.c",
				"src\\Device\\Timer\\timer.c"
			],
			[
				"adc_types",
				"include\\Device\\adc_types.h"
			],
			[
				"hts",
				"src\\Device\\TempHum\\temphum_HTS221.c"
			],
			[
				"faults",
				"include\\Application\\faults.h"
			],
			[
				"adc_types.h",
				"include\\Device\\adc_types.h"
			],
			[
				"mcu",
				"src\\Device\\mcu.c"
			],
			[
				"relays.c",
				"src\\Device\\Relay\\relays.c"
			],
			[
				"faults.h",
				"include\\Application\\faults.h"
			],
			[
				"signal_dft.c",
				"src\\Application\\Signal\\signal_dft.c"
			],
			[
				"signal_dft",
				"src\\Application\\Signal\\signal_dft.c"
			],
			[
				"alarms.",
				"src\\Application\\alarms.c"
			],
			[
				"uv",
				"src\\Application\\Signal\\signal_uv.c"
			],
			[
				"proximity",
				"src\\Device\\Proximity\\proximity.c"
			],
			[
				"i2c.c",
				"src\\Drivers\\I2C.c"
			],
			[
				"calendar_i2c.c",
				"src\\Device\\Calendar\\calendar_i2c.c"
			],
			[
				"temphum.c",
				"src\\Device\\TempHum\\temphum.c"
			],
			[
				"reg",
				"include\\Drivers\\registers.h"
			],
			[
				"defrost",
				"src\\Application\\defrost.c"
			],
			[
				"temphumadc.c",
				"src\\Device\\TempHum\\temphumadc.c"
			],
			[
				"defrost.c",
				"src\\Application\\defrost.c"
			],
			[
				"regisetrs.h",
				"include\\Drivers\\registers.h"
			],
			[
				"registers.c",
				"src\\Drivers\\registers.c"
			],
			[
				"dft.c",
				"src\\Application\\Signal\\signal_dft.c"
			],
			[
				"spi_a",
				"src\\Drivers\\SPI_ADS1256.c"
			],
			[
				"signal2",
				"test\\test_signal2.c"
			],
			[
				"signal_avg.c",
				"src\\Application\\Signal\\signal_avg.c"
			],
			[
				"spiads",
				"src\\Drivers\\SPI_ADS1256.c"
			],
			[
				"ads",
				"src\\Drivers\\SPI_ADS1256.c"
			],
			[
				"test_signal2",
				"test\\test_signal2.c"
			],
			[
				"signal_mv.c",
				"src\\Application\\Signal\\signal_mv.c"
			],
			[
				"sensitivity.c",
				"src\\Application\\Signal\\sensitivity.c"
			],
			[
				"test_alarms.c",
				"test\\test_alarms.c"
			],
			[
				"alarms.h",
				"include\\Application\\alarms.h"
			],
			[
				"temphumhts",
				"src\\Device\\TempHum\\temphum_HTS221.c"
			],
			[
				"temphum",
				"src\\Device\\TempHum\\temphum.c"
			],
			[
				"runtime",
				"include\\Device\\runtime_flags.h"
			],
			[
				"heater.c",
				"src\\Device\\heater.c"
			],
			[
				"relay.c",
				"src\\Device\\Relay\\relays.c"
			],
			[
				"lamp",
				"src\\Device\\lamp.c"
			],
			[
				"heater",
				"src\\Device\\heater.c"
			],
			[
				"fault.c",
				"src\\Application\\faults.c"
			],
			[
				"ADC.C",
				"src\\Device\\adc.c"
			],
			[
				"spi_",
				"include\\Drivers\\SPI_ADS1256.h"
			],
			[
				"tasks.h",
				"include\\Application\\tasks.h"
			],
			[
				"timer.h",
				"include\\Device\\Timer\\timer.h"
			],
			[
				"test_timer",
				"test\\test_timer.c"
			],
			[
				"test_timer.c",
				"test\\test_timer.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 161.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 580.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 227.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
